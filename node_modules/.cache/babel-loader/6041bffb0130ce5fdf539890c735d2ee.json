{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nexport var SHOW_NOTIFICATION = 'RA/SHOW_NOTIFICATION';\n/**\n * Shows a snackbar/toast notification on the screen\n *\n * @see {@link https://material-ui.com/api/snackbar/|Material ui snackbar component}\n * @see {@link https://material.io/guidelines/components/snackbars-toasts.html|Material ui reference document on snackbar}\n */\n\nexport var showNotification = function showNotification( // A translatable label or text to display on notification\nmessage, // The type of the notification\ntype, // Specify additional parameters of notification\nnotificationOptions) {\n  if (type === void 0) {\n    type = 'info';\n  }\n\n  return {\n    type: SHOW_NOTIFICATION,\n    payload: __assign({}, notificationOptions, {\n      type: type,\n      message: message\n    })\n  };\n};\nexport var HIDE_NOTIFICATION = 'RA/HIDE_NOTIFICATION';\nexport var hideNotification = function hideNotification() {\n  return {\n    type: HIDE_NOTIFICATION\n  };\n};","map":null,"metadata":{},"sourceType":"module"}