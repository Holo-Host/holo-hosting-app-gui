{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { Component, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport MuiTab from '@material-ui/core/Tab';\nimport { translate } from 'ra-core';\nimport classnames from 'classnames';\nimport Labeled from '../input/Labeled';\n\nvar sanitizeRestProps = function sanitizeRestProps(_a) {\n  var label = _a.label,\n      icon = _a.icon,\n      value = _a.value,\n      translate = _a.translate,\n      rest = __rest(_a, [\"label\", \"icon\", \"value\", \"translate\"]);\n\n  return rest;\n};\n/**\n * Tab element for the SimpleShowLayout.\n *\n * The `<Tab>` component accepts the following props:\n *\n * - label: The string displayed for each tab\n * - icon: The icon to show before the label (optional). Must be an element.\n *\n * @example\n *     // in src/posts.js\n *     import React from 'react';\n *     import FavoriteIcon from '@material-ui/icons/Favorite';\n *     import PersonPinIcon from '@material-ui/icons/PersonPin';\n *     import { Show, TabbedShowLayout, Tab, TextField } from 'react-admin';\n *\n *     export const PostShow = (props) => (\n *         <Show {...props}>\n *             <TabbedShowLayout>\n *                 <Tab label=\"Content\" icon={<FavoriteIcon />}>\n *                     <TextField source=\"title\" />\n *                     <TextField source=\"subtitle\" />\n *                </Tab>\n *                 <Tab label=\"Metadata\" icon={<PersonIcon />}>\n *                     <TextField source=\"category\" />\n *                </Tab>\n *             </TabbedShowLayout>\n *         </Show>\n *     );\n *\n *     // in src/App.js\n *     import React from 'react';\n *     import { Admin, Resource } from 'react-admin';\n *\n *     import { PostShow } from './posts';\n *\n *     const App = () => (\n *         <Admin dataProvider={...}>\n *             <Resource name=\"posts\" show={PostShow} />\n *         </Admin>\n *     );\n *     export default App;\n */\n\n\nvar Tab =\n/** @class */\nfunction (_super) {\n  __extends(Tab, _super);\n\n  function Tab() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.renderHeader = function (_a) {\n      var className = _a.className,\n          label = _a.label,\n          icon = _a.icon,\n          value = _a.value,\n          translate = _a.translate,\n          rest = __rest(_a, [\"className\", \"label\", \"icon\", \"value\", \"translate\"]);\n\n      return React.createElement(MuiTab, __assign({\n        key: label,\n        label: translate(label, {\n          _: label\n        }),\n        value: value,\n        icon: icon,\n        className: classnames('show-tab', className),\n        component: Link,\n        to: value\n      }, sanitizeRestProps(rest)));\n    };\n\n    _this.renderContent = function (_a) {\n      var className = _a.className,\n          children = _a.children,\n          basePath = _a.basePath,\n          record = _a.record,\n          resource = _a.resource;\n      return React.createElement(\"span\", {\n        className: className\n      }, React.Children.map(children, function (field) {\n        return field && isValidElement(field) ? React.createElement(\"div\", {\n          key: field.props.source,\n          className: classnames('ra-field', \"ra-field-\" + field.props.source, field.props.className)\n        }, field.props.addLabel ? React.createElement(Labeled, {\n          label: field.props.label,\n          source: field.props.source,\n          basePath: basePath,\n          record: record,\n          resource: resource\n        }, field) : typeof field.type === 'string' ? field : React.cloneElement(field, {\n          basePath: basePath,\n          record: record,\n          resource: resource\n        })) : null;\n      }));\n    };\n\n    return _this;\n  }\n\n  Tab.prototype.render = function () {\n    var _a = this.props,\n        children = _a.children,\n        context = _a.context,\n        rest = __rest(_a, [\"children\", \"context\"]);\n\n    return context === 'header' ? this.renderHeader(rest) : this.renderContent(__assign({\n      children: children\n    }, rest));\n  };\n\n  return Tab;\n}(Component);\n\nTab.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  context: PropTypes.oneOf(['header', 'content']),\n  icon: PropTypes.element,\n  label: PropTypes.string.isRequired,\n  translate: PropTypes.func.isRequired,\n  value: PropTypes.string\n};\nexport default translate(Tab);","map":null,"metadata":{},"sourceType":"module"}