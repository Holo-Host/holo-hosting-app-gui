{"ast":null,"code":"var raf = require('rafl');\n\nvar E_NOSCROLL = new Error('Element already at target scroll position');\nvar E_CANCELLED = new Error('Scroll cancelled');\nvar min = Math.min;\nmodule.exports = {\n  left: make('scrollLeft'),\n  top: make('scrollTop')\n};\n\nfunction make(prop) {\n  return function scroll(el, to, opts, cb) {\n    opts = opts || {};\n    if (typeof opts == 'function') cb = opts, opts = {};\n    if (typeof cb != 'function') cb = noop;\n    var start = +new Date();\n    var from = el[prop];\n    var ease = opts.ease || inOutSine;\n    var duration = !isNaN(opts.duration) ? +opts.duration : 350;\n    var cancelled = false;\n    return from === to ? cb(E_NOSCROLL, el[prop]) : raf(animate), cancel;\n\n    function cancel() {\n      cancelled = true;\n    }\n\n    function animate(timestamp) {\n      if (cancelled) return cb(E_CANCELLED, el[prop]);\n      var now = +new Date();\n      var time = min(1, (now - start) / duration);\n      var eased = ease(time);\n      el[prop] = eased * (to - from) + from;\n      time < 1 ? raf(animate) : raf(function () {\n        cb(null, el[prop]);\n      });\n    }\n  };\n}\n\nfunction inOutSine(n) {\n  return 0.5 * (1 - Math.cos(Math.PI * n));\n}\n\nfunction noop() {}","map":null,"metadata":{},"sourceType":"script"}