{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\nimport { translate, sanitizeListRestProps } from 'ra-core';\nimport CardActions from '../layout/CardActions';\n\nvar styles = function styles(theme) {\n  return {\n    toolbar: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      zIndex: 3,\n      color: theme.palette.type === 'light' ? theme.palette.primary.main : theme.palette.text.primary,\n      justifyContent: 'space-between',\n      backgroundColor: theme.palette.type === 'light' ? lighten(theme.palette.primary.light, 0.85) : theme.palette.primary.dark,\n      minHeight: 64,\n      height: 64,\n      transition: theme.transitions.create('height') + \", \" + theme.transitions.create('min-height')\n    },\n    toolbarCollapsed: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      zIndex: 3,\n      minHeight: 0,\n      height: 0,\n      overflowY: 'hidden',\n      transition: theme.transitions.create('all')\n    },\n    title: {\n      flex: '0 0 auto'\n    }\n  };\n};\n\nvar BulkActionsToolbar = function BulkActionsToolbar(_a) {\n  var classes = _a.classes,\n      basePath = _a.basePath,\n      filterValues = _a.filterValues,\n      label = _a.label,\n      resource = _a.resource,\n      selectedIds = _a.selectedIds,\n      translate = _a.translate,\n      children = _a.children,\n      rest = __rest(_a, [\"classes\", \"basePath\", \"filterValues\", \"label\", \"resource\", \"selectedIds\", \"translate\", \"children\"]);\n\n  return selectedIds.length > 0 ? React.createElement(Toolbar, __assign({\n    \"data-test\": \"bulk-actions-toolbar\",\n    className: classes.toolbar\n  }, sanitizeListRestProps(rest)), React.createElement(\"div\", {\n    className: classes.title\n  }, React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"subheading\"\n  }, translate(label, {\n    _: label,\n    smart_count: selectedIds.length\n  }))), React.createElement(CardActions, null, Children.map(children, function (child) {\n    return cloneElement(child, {\n      basePath: basePath,\n      filterValues: filterValues,\n      resource: resource,\n      selectedIds: selectedIds\n    });\n  }))) : React.createElement(Toolbar, {\n    className: classes.toolbarCollapsed\n  });\n};\n\nBulkActionsToolbar.propTypes = {\n  children: PropTypes.node,\n  classes: PropTypes.object,\n  basePath: PropTypes.string,\n  filterValues: PropTypes.object,\n  label: PropTypes.string,\n  resource: PropTypes.string,\n  selectedIds: PropTypes.array,\n  translate: PropTypes.func.isRequired\n};\nBulkActionsToolbar.defaultProps = {\n  label: 'ra.action.bulk_actions'\n};\nvar enhance = compose(translate, withStyles(styles));\nexport default enhance(BulkActionsToolbar);","map":null,"metadata":{},"sourceType":"module"}