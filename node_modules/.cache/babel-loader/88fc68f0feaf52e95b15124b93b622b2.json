{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport React, { Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { translate } from 'ra-core';\n\nvar UserMenu =\n/** @class */\nfunction (_super) {\n  __extends(UserMenu, _super);\n\n  function UserMenu() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      auth: true,\n      anchorEl: null\n    };\n\n    _this.handleChange = function (event, checked) {\n      _this.setState({\n        auth: checked\n      });\n    };\n\n    _this.handleMenu = function (event) {\n      _this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        anchorEl: null\n      });\n    };\n\n    return _this;\n  }\n\n  UserMenu.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        children = _a.children,\n        label = _a.label,\n        icon = _a.icon,\n        logout = _a.logout,\n        translate = _a.translate;\n    if (!logout && !children) return null;\n    var anchorEl = this.state.anchorEl;\n    var open = Boolean(anchorEl);\n    return React.createElement(\"div\", null, React.createElement(Tooltip, {\n      title: label && translate(label, {\n        _: label\n      })\n    }, React.createElement(IconButton, {\n      \"aria-label\": label && translate(label, {\n        _: label\n      }),\n      \"aria-owns\": open ? 'menu-appbar' : null,\n      \"aria-haspopup\": true,\n      color: \"inherit\",\n      onClick: this.handleMenu\n    }, icon)), React.createElement(Menu, {\n      id: \"menu-appbar\",\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      open: open,\n      onClose: this.handleClose\n    }, Children.map(children, function (menuItem) {\n      return cloneElement(menuItem, {\n        onClick: _this.handleClose\n      });\n    }), logout));\n  };\n\n  UserMenu.propTypes = {\n    children: PropTypes.node,\n    label: PropTypes.string.isRequired,\n    logout: PropTypes.node,\n    icon: PropTypes.node,\n    translate: PropTypes.func.isRequired\n  };\n  UserMenu.defaultProps = {\n    label: 'ra.auth.user_menu',\n    icon: React.createElement(AccountCircle, null)\n  };\n  return UserMenu;\n}(React.Component);\n\nexport default translate(UserMenu);","map":null,"metadata":{},"sourceType":"module"}