{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { userCheck as userCheckAction } from '../actions/authActions';\n/**\n * Restrict access to children to authenticated users\n *\n * Useful for Route components ; used internally by Resource.\n * Use it to decorate your custom page components to require\n * authentication.\n *\n * Pass the `location` from the `routeParams` as `location` prop.\n * You can set additional `authParams` at will if your authProvider\n * requires it.\n *\n * @example\n *     import { Authenticated } from 'react-admin';\n *\n *     const CustomRoutes = [\n *         <Route path=\"/foo\" render={routeParams =>\n *             <Authenticated location={routeParams.location} authParams={{ foo: 'bar' }}>\n *                 <Foo />\n *             </Authenticated>\n *         } />\n *     ];\n *     const App = () => (\n *         <Admin customRoutes={customRoutes}>\n *             ...\n *         </Admin>\n *     );\n */\n\nvar Authenticated =\n/** @class */\nfunction (_super) {\n  __extends(Authenticated, _super);\n\n  function Authenticated() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Authenticated.prototype.componentWillMount = function () {\n    this.checkAuthentication(this.props);\n  };\n\n  Authenticated.prototype.componentWillReceiveProps = function (nextProps) {\n    if (nextProps.location !== this.props.location) {\n      this.checkAuthentication(nextProps);\n    }\n  };\n\n  Authenticated.prototype.checkAuthentication = function (params) {\n    var userCheck = params.userCheck,\n        authParams = params.authParams,\n        location = params.location;\n    userCheck(authParams, location && location.pathname);\n  }; // render the child even though the AUTH_CHECK isn't finished (optimistic rendering)\n\n\n  Authenticated.prototype.render = function () {\n    var _a = this.props,\n        children = _a.children,\n        userCheck = _a.userCheck,\n        authParams = _a.authParams,\n        location = _a.location,\n        rest = __rest(_a, [\"children\", \"userCheck\", \"authParams\", \"location\"]);\n\n    return React.cloneElement(children, rest);\n  };\n\n  return Authenticated;\n}(Component);\n\nexport { Authenticated };\nexport default connect(null, {\n  userCheck: userCheckAction\n})(Authenticated);","map":null,"metadata":{},"sourceType":"module"}