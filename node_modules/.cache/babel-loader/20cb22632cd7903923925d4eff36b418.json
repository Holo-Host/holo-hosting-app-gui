{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport classNames from 'classnames';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport MuiTextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { translate } from 'ra-core';\nvar styles = {\n  clearIcon: {\n    height: 16,\n    width: 0\n  },\n  visibleClearIcon: {\n    width: 16\n  },\n  clearButton: {\n    height: 24,\n    width: 0\n  },\n  visibleClearButton: {\n    width: 24\n  }\n};\n/**\n * An override of the default Material-UI TextField which is resettable\n */\n\nvar ResettableTextField =\n/** @class */\nfunction (_super) {\n  __extends(ResettableTextField, _super);\n\n  function ResettableTextField() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      showClear: false\n    };\n\n    _this.handleClickClearButton = function (event) {\n      event.preventDefault();\n\n      _this.props.onChange('');\n    };\n\n    _this.handleMouseDownClearButton = function (event) {\n      event.preventDefault();\n    };\n\n    _this.handleFocus = function (event) {\n      _this.setState({\n        showClear: true\n      });\n\n      _this.props.onFocus && _this.props.onFocus(event);\n    };\n\n    _this.handleBlur = function (event) {\n      _this.setState({\n        showClear: false\n      });\n\n      _this.props.onBlur && _this.props.onBlur(event);\n    };\n\n    return _this;\n  }\n\n  ResettableTextField.prototype.render = function () {\n    var _a, _b;\n\n    var _c = this.props,\n        translate = _c.translate,\n        classes = _c.classes,\n        clearAlwaysVisible = _c.clearAlwaysVisible,\n        InputProps = _c.InputProps,\n        value = _c.value,\n        resettable = _c.resettable,\n        props = __rest(_c, [\"translate\", \"classes\", \"clearAlwaysVisible\", \"InputProps\", \"value\", \"resettable\"]);\n\n    var showClear = this.state.showClear;\n\n    var clearButton = classes.clearButton,\n        clearIcon = classes.clearIcon,\n        visibleClearButton = classes.visibleClearButton,\n        visibleClearIcon = classes.visibleClearIcon,\n        restClasses = __rest(classes, [\"clearButton\", \"clearIcon\", \"visibleClearButton\", \"visibleClearIcon\"]);\n\n    return React.createElement(MuiTextField, __assign({\n      classes: restClasses,\n      value: value,\n      InputProps: __assign({\n        endAdornment: resettable && value && React.createElement(InputAdornment, {\n          position: \"end\"\n        }, React.createElement(IconButton, {\n          className: classNames(clearButton, (_a = {}, _a[visibleClearButton] = clearAlwaysVisible || showClear, _a)),\n          \"aria-label\": translate('ra.action.clear_input_value'),\n          title: translate('ra.action.clear_input_value'),\n          disableRipple: true,\n          onClick: this.handleClickClearButton,\n          onMouseDown: this.handleMouseDownClearButton\n        }, React.createElement(ClearIcon, {\n          className: classNames(clearIcon, (_b = {}, _b[visibleClearIcon] = clearAlwaysVisible || showClear, _b))\n        })))\n      }, InputProps)\n    }, props, {\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur\n    }));\n  };\n\n  ResettableTextField.propTypes = {\n    classes: PropTypes.object.isRequired,\n    clearAlwaysVisible: PropTypes.bool,\n    InputProps: PropTypes.object,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func.isRequired,\n    onFocus: PropTypes.func,\n    resettable: PropTypes.bool,\n    translate: PropTypes.func.isRequired,\n    value: PropTypes.any.isRequired\n  };\n  return ResettableTextField;\n}(Component);\n\nexport default compose(translate, withStyles(styles))(ResettableTextField);","map":null,"metadata":{},"sourceType":"module"}