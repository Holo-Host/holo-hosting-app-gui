{"ast":null,"code":"import _defineProperty from \"/home/lisa/Documents/gitrepos/holochain/holo/holo-hosting/No2_holo-hosting-app_GUI/holo-hosting-app_GUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/lisa/Documents/gitrepos/holochain/holo/holo-hosting/No2_holo-hosting-app_GUI/holo-hosting-app_GUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/lisa/Documents/gitrepos/holochain/holo/holo-hosting/No2_holo-hosting-app_GUI/holo-hosting-app_GUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lisa/Documents/gitrepos/holochain/holo/holo-hosting/No2_holo-hosting-app_GUI/holo-hosting-app_GUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/lisa/Documents/gitrepos/holochain/holo/holo-hosting/No2_holo-hosting-app_GUI/holo-hosting-app_GUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/lisa/Documents/gitrepos/holochain/holo/holo-hosting/No2_holo-hosting-app_GUI/holo-hosting-app_GUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/lisa/Documents/gitrepos/holochain/holo/holo-hosting/No2_holo-hosting-app_GUI/holo-hosting-app_GUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/home/lisa/Documents/gitrepos/holochain/holo/holo-hosting/No2_holo-hosting-app_GUI/holo-hosting-app_GUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/lisa/Documents/gitrepos/holochain/holo/holo-hosting/No2_holo-hosting-app_GUI/holo-hosting-app_GUI/src/orders/OrderList.js\";\nimport React, { Fragment } from 'react';\nimport { AutocompleteInput, BooleanField, Datagrid, DateField, DateInput, EditButton, Filter, List, NullableBooleanInput, NumberField, ReferenceInput, Responsive, SearchInput, TextField, TextInput } from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Divider from '@material-ui/core/Divider';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport NbItemsField from './NbItemsField';\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport MobileGrid from './MobileGrid';\nvar filterStyles = {\n  status: {\n    width: 150\n  }\n};\nvar OrderFilter = withStyles(filterStyles)(function (_ref) {\n  var classes = _ref.classes,\n      props = _objectWithoutProperties(_ref, [\"classes\"]);\n\n  return React.createElement(Filter, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(SearchInput, {\n    source: \"q\",\n    alwaysOn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(ReferenceInput, {\n    source: \"customer_id\",\n    reference: \"customers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(AutocompleteInput, {\n    optionText: function optionText(choice) {\n      return \"\".concat(choice.first_name, \" \").concat(choice.last_name);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(DateInput, {\n    source: \"date_gte\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(DateInput, {\n    source: \"date_lte\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(TextInput, {\n    source: \"total_gte\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(NullableBooleanInput, {\n    source: \"returned\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n});\nvar datagridStyles = {\n  total: {\n    fontWeight: 'bold'\n  }\n};\n\nvar TabbedDatagrid =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TabbedDatagrid, _React$Component);\n\n  function TabbedDatagrid() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TabbedDatagrid);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TabbedDatagrid)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.tabs = [{\n      id: 'ordered',\n      name: 'ordered'\n    }, {\n      id: 'delivered',\n      name: 'delivered'\n    }, {\n      id: 'cancelled',\n      name: 'cancelled'\n    }];\n    _this.state = {\n      ordered: [],\n      delivered: [],\n      cancelled: []\n    };\n\n    _this.handleChange = function (event, value) {\n      var _this$props = _this.props,\n          filterValues = _this$props.filterValues,\n          setFilters = _this$props.setFilters;\n      setFilters(_objectSpread({}, filterValues, {\n        status: value\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(TabbedDatagrid, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          filterValues = _this$props2.filterValues,\n          props = _objectWithoutProperties(_this$props2, [\"classes\", \"filterValues\"]);\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        fullWidth: true,\n        centered: true,\n        value: filterValues.status,\n        indicatorColor: \"primary\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.tabs.map(function (choice) {\n        return React.createElement(Tab, {\n          key: choice.id,\n          label: choice.name,\n          value: choice.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        });\n      })), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Responsive, {\n        xsmall: React.createElement(MobileGrid, Object.assign({}, props, {\n          ids: this.state[filterValues.status],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        })),\n        medium: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, filterValues.status === 'ordered' && React.createElement(Datagrid, Object.assign({}, props, {\n          ids: this.state.ordered,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }), React.createElement(DateField, {\n          source: \"date\",\n          showTime: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }), React.createElement(TextField, {\n          source: \"reference\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }), React.createElement(CustomerReferenceField, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }), React.createElement(NbItemsField, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }), React.createElement(NumberField, {\n          source: \"total\",\n          options: {\n            style: 'currency',\n            currency: 'USD'\n          },\n          className: classes.total,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }), React.createElement(EditButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        })), filterValues.status === 'delivered' && React.createElement(Datagrid, Object.assign({}, props, {\n          ids: this.state.delivered,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }), React.createElement(DateField, {\n          source: \"date\",\n          showTime: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }), React.createElement(TextField, {\n          source: \"reference\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }), React.createElement(CustomerReferenceField, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }), React.createElement(NbItemsField, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }), React.createElement(NumberField, {\n          source: \"total\",\n          options: {\n            style: 'currency',\n            currency: 'USD'\n          },\n          className: classes.total,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }), React.createElement(BooleanField, {\n          source: \"returned\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }), React.createElement(EditButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        })), filterValues.status === 'cancelled' && React.createElement(Datagrid, Object.assign({}, props, {\n          ids: this.state.cancelled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }), React.createElement(DateField, {\n          source: \"date\",\n          showTime: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }), React.createElement(TextField, {\n          source: \"reference\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }), React.createElement(CustomerReferenceField, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }), React.createElement(NbItemsField, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }), React.createElement(NumberField, {\n          source: \"total\",\n          options: {\n            style: 'currency',\n            currency: 'USD'\n          },\n          className: classes.total,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }), React.createElement(BooleanField, {\n          source: \"returned\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }), React.createElement(EditButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (props.ids !== state[props.filterValues.status]) {\n        return _objectSpread({}, state, _defineProperty({}, props.filterValues.status, props.ids));\n      }\n\n      return null;\n    }\n  }]);\n\n  return TabbedDatagrid;\n}(React.Component);\n\nvar StyledTabbedDatagrid = withStyles(datagridStyles)(TabbedDatagrid);\n\nvar OrderList = function OrderList(_ref2) {\n  var classes = _ref2.classes,\n      props = _objectWithoutProperties(_ref2, [\"classes\"]);\n\n  return React.createElement(List, Object.assign({}, props, {\n    filterDefaultValues: {\n      status: 'ordered'\n    },\n    sort: {\n      field: 'date',\n      order: 'DESC'\n    },\n    perPage: 25,\n    filters: React.createElement(OrderFilter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(StyledTabbedDatagrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }));\n};\n\nexport default OrderList;","map":{"version":3,"sources":["/home/lisa/Documents/gitrepos/holochain/holo/holo-hosting/No2_holo-hosting-app_GUI/holo-hosting-app_GUI/src/orders/OrderList.js"],"names":["React","Fragment","AutocompleteInput","BooleanField","Datagrid","DateField","DateInput","EditButton","Filter","List","NullableBooleanInput","NumberField","ReferenceInput","Responsive","SearchInput","TextField","TextInput","withStyles","Divider","Tabs","Tab","NbItemsField","CustomerReferenceField","MobileGrid","filterStyles","status","width","OrderFilter","classes","props","choice","first_name","last_name","datagridStyles","total","fontWeight","TabbedDatagrid","tabs","id","name","state","ordered","delivered","cancelled","handleChange","event","value","filterValues","setFilters","map","style","currency","ids","Component","StyledTabbedDatagrid","OrderList","field","order"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport {\n    AutocompleteInput,\n    BooleanField,\n    Datagrid,\n    DateField,\n    DateInput,\n    EditButton,\n    Filter,\n    List,\n    NullableBooleanInput,\n    NumberField,\n    ReferenceInput,\n    Responsive,\n    SearchInput,\n    TextField,\n    TextInput,\n} from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Divider from '@material-ui/core/Divider';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport NbItemsField from './NbItemsField';\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport MobileGrid from './MobileGrid';\n\nconst filterStyles = {\n    status: { width: 150 },\n};\n\nconst OrderFilter = withStyles(filterStyles)(({ classes, ...props }) => (\n    <Filter {...props}>\n        <SearchInput source=\"q\" alwaysOn />\n        <ReferenceInput source=\"customer_id\" reference=\"customers\">\n            <AutocompleteInput\n                optionText={choice =>\n                    `${choice.first_name} ${choice.last_name}`\n                }\n            />\n        </ReferenceInput>\n        <DateInput source=\"date_gte\" />\n        <DateInput source=\"date_lte\" />\n        <TextInput source=\"total_gte\" />\n        <NullableBooleanInput source=\"returned\" />\n    </Filter>\n));\n\nconst datagridStyles = {\n    total: { fontWeight: 'bold' },\n};\n\nclass TabbedDatagrid extends React.Component {\n    tabs = [\n        { id: 'ordered', name: 'ordered' },\n        { id: 'delivered', name: 'delivered' },\n        { id: 'cancelled', name: 'cancelled' },\n    ];\n\n    state = { ordered: [], delivered: [], cancelled: [] };\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.ids !== state[props.filterValues.status]) {\n            return { ...state, [props.filterValues.status]: props.ids };\n        }\n        return null;\n    }\n\n    handleChange = (event, value) => {\n        const { filterValues, setFilters } = this.props;\n        setFilters({ ...filterValues, status: value });\n    };\n\n    render() {\n        const { classes, filterValues, ...props } = this.props;\n        return (\n            <Fragment>\n                <Tabs\n                    fullWidth\n                    centered\n                    value={filterValues.status}\n                    indicatorColor=\"primary\"\n                    onChange={this.handleChange}\n                >\n                    {this.tabs.map(choice => (\n                        <Tab\n                            key={choice.id}\n                            label={choice.name}\n                            value={choice.id}\n                        />\n                    ))}\n                </Tabs>\n                <Divider />\n                <Responsive\n                    xsmall={\n                        <MobileGrid\n                            {...props}\n                            ids={this.state[filterValues.status]}\n                        />\n                    }\n                    medium={\n                        <div>\n                            {filterValues.status === 'ordered' && (\n                                <Datagrid {...props} ids={this.state.ordered}>\n                                    <DateField source=\"date\" showTime />\n                                    <TextField source=\"reference\" />\n                                    <CustomerReferenceField />\n                                    <NbItemsField />\n                                    <NumberField\n                                        source=\"total\"\n                                        options={{\n                                            style: 'currency',\n                                            currency: 'USD',\n                                        }}\n                                        className={classes.total}\n                                    />\n                                    <EditButton />\n                                </Datagrid>\n                            )}\n                            {filterValues.status === 'delivered' && (\n                                <Datagrid {...props} ids={this.state.delivered}>\n                                    <DateField source=\"date\" showTime />\n                                    <TextField source=\"reference\" />\n                                    <CustomerReferenceField />\n                                    <NbItemsField />\n                                    <NumberField\n                                        source=\"total\"\n                                        options={{\n                                            style: 'currency',\n                                            currency: 'USD',\n                                        }}\n                                        className={classes.total}\n                                    />\n                                    <BooleanField source=\"returned\" />\n                                    <EditButton />\n                                </Datagrid>\n                            )}\n                            {filterValues.status === 'cancelled' && (\n                                <Datagrid {...props} ids={this.state.cancelled}>\n                                    <DateField source=\"date\" showTime />\n                                    <TextField source=\"reference\" />\n                                    <CustomerReferenceField />\n                                    <NbItemsField />\n                                    <NumberField\n                                        source=\"total\"\n                                        options={{\n                                            style: 'currency',\n                                            currency: 'USD',\n                                        }}\n                                        className={classes.total}\n                                    />\n                                    <BooleanField source=\"returned\" />\n                                    <EditButton />\n                                </Datagrid>\n                            )}\n                        </div>\n                    }\n                />\n            </Fragment>\n        );\n    }\n}\n\nconst StyledTabbedDatagrid = withStyles(datagridStyles)(TabbedDatagrid);\n\nconst OrderList = ({ classes, ...props }) => (\n    <List\n        {...props}\n        filterDefaultValues={{ status: 'ordered' }}\n        sort={{ field: 'date', order: 'DESC' }}\n        perPage={25}\n        filters={<OrderFilter />}\n    >\n        <StyledTabbedDatagrid />\n    </List>\n);\n\nexport default OrderList;\n"]},"metadata":{},"sourceType":"module"}