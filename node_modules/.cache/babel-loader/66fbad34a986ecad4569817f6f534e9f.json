{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"./utils\");\n\nfunction default_1(db) {\n  // set latest purchase date\n  db.commands.forEach(function (command) {\n    var customer = db.customers[command.customer_id];\n\n    if (!customer.latest_purchase || customer.latest_purchase < command.date) {\n      customer.latest_purchase = command.date;\n    }\n\n    customer.total_spent += command.total;\n    customer.nb_commands++;\n  }); // add 'collector' group\n\n  var customersBySpending = db.commands.reduce(function (customers, command) {\n    if (!customers[command.customer_id]) {\n      customers[command.customer_id] = {\n        nbProducts: 0\n      };\n    }\n\n    customers[command.customer_id].nbProducts += command.basket.length;\n    return customers;\n  }, {});\n  Object.keys(customersBySpending).map(function (customer_id) {\n    if (customersBySpending[customer_id].nbProducts > 10) {\n      db.customers[customer_id].groups.push('collector');\n    }\n  }); // add 'ordered_once' group\n\n  db.customers.filter(function (customer) {\n    return customer.nb_commands == 1;\n  }).forEach(function (customer) {\n    return customer.groups.push('ordered_once');\n  }); // add 'compulsive' group\n\n  db.customers.filter(function (customer) {\n    return customer.total_spent > 1500;\n  }).forEach(function (customer) {\n    return customer.groups.push('compulsive');\n  }); // add 'regular' group\n\n  db.customers.filter(function () {\n    return utils_1.weightedBoolean(20);\n  }).forEach(function (customer) {\n    return customer.groups.push('regular');\n  }); // add 'returns' group\n\n  db.commands.filter(function (command) {\n    return command.returned;\n  }).forEach(function (command) {\n    if (db.customers[command.customer_id].groups.indexOf('returns') === -1) {\n      db.customers[command.customer_id].groups.push('returns');\n    }\n  }); // add 'reviewer' group\n\n  db.reviews.forEach(function (review) {\n    var customer = db.customers[review.customer_id];\n\n    if (customer.groups.indexOf('reviewer') === -1) {\n      customer.groups.push('reviewer');\n    }\n  }); // add settings\n\n  db.settings = [{\n    id: 1,\n    configuration: {\n      url: 'http://posters-galore.com/',\n      mail: {\n        sender: 'julio@posters-galore.com',\n        transport: {\n          service: 'fakemail',\n          auth: {\n            user: 'fake@mail.com',\n            pass: 'f00b@r'\n          }\n        }\n      },\n      file_type_whiltelist: ['txt', 'doc', 'docx', 'xls', 'xlsx', 'pdf', 'png', 'jpg']\n    }\n  }];\n}\n\nexports.default = default_1;","map":null,"metadata":{},"sourceType":"script"}