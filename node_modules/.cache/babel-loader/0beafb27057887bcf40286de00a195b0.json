{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport inflection from 'inflection';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport { getResources, translate } from 'ra-core';\nimport DefaultIcon from '@material-ui/icons/ViewList';\nimport DashboardMenuItem from './DashboardMenuItem';\nimport MenuItemLink from './MenuItemLink';\nimport Responsive from '../layout/Responsive';\nvar styles = {\n  main: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start'\n  }\n};\n\nvar translatedResourceName = function translatedResourceName(resource, translate) {\n  return translate(\"resources.\" + resource.name + \".name\", {\n    smart_count: 2,\n    _: resource.options && resource.options.label ? translate(resource.options.label, {\n      smart_count: 2,\n      _: resource.options.label\n    }) : inflection.humanize(inflection.pluralize(resource.name))\n  });\n};\n\nvar Menu = function Menu(_a) {\n  var classes = _a.classes,\n      className = _a.className,\n      dense = _a.dense,\n      hasDashboard = _a.hasDashboard,\n      onMenuClick = _a.onMenuClick,\n      open = _a.open,\n      pathname = _a.pathname,\n      resources = _a.resources,\n      translate = _a.translate,\n      logout = _a.logout,\n      rest = __rest(_a, [\"classes\", \"className\", \"dense\", \"hasDashboard\", \"onMenuClick\", \"open\", \"pathname\", \"resources\", \"translate\", \"logout\"]);\n\n  return React.createElement(\"div\", __assign({\n    className: classnames(classes.main, className)\n  }, rest), hasDashboard && React.createElement(DashboardMenuItem, {\n    onClick: onMenuClick\n  }), resources.filter(function (r) {\n    return r.hasList;\n  }).map(function (resource) {\n    return React.createElement(MenuItemLink, {\n      key: resource.name,\n      to: \"/\" + resource.name,\n      primaryText: translatedResourceName(resource, translate),\n      leftIcon: resource.icon ? React.createElement(resource.icon, null) : React.createElement(DefaultIcon, null),\n      onClick: onMenuClick,\n      dense: dense\n    });\n  }), React.createElement(Responsive, {\n    xsmall: logout,\n    medium: null\n  }));\n};\n\nMenu.propTypes = {\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  dense: PropTypes.bool,\n  hasDashboard: PropTypes.bool,\n  logout: PropTypes.element,\n  onMenuClick: PropTypes.func,\n  open: PropTypes.bool,\n  pathname: PropTypes.string,\n  resources: PropTypes.array.isRequired,\n  translate: PropTypes.func.isRequired\n};\nMenu.defaultProps = {\n  onMenuClick: function onMenuClick() {\n    return null;\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    open: state.admin.ui.sidebarOpen,\n    resources: getResources(state),\n    pathname: state.router.location.pathname\n  };\n};\n\nvar enhance = compose(translate, connect(mapStateToProps, {}, // Avoid connect passing dispatch in props,\nnull, {\n  areStatePropsEqual: function areStatePropsEqual(prev, next) {\n    return prev.resources.every(function (value, index) {\n      return value === next.resources[index];\n    } // shallow compare resources\n    ) && prev.pathname == next.pathname && prev.open == next.open;\n  }\n}), withStyles(styles));\nexport default enhance(Menu);","map":null,"metadata":{},"sourceType":"module"}