{"ast":null,"code":"import FakeRest from 'fakerest';\nimport fetchMock from 'fetch-mock';\nimport generateData from 'data-generator';\nexport default (function () {\n  var data = generateData({\n    serializeDate: true\n  });\n  var restServer = new FakeRest.FetchServer('http://localhost:4000');\n\n  if (window) {\n    window.restServer = restServer; // give way to update data in the console\n  }\n\n  restServer.init(data);\n  restServer.toggleLogging(); // logging is off by default, enable it\n\n  fetchMock.mock('begin:http://localhost:4000', restServer.getHandler());\n  return function () {\n    return fetchMock.restore();\n  };\n});","map":{"version":3,"sources":["/home/lisa/Documents/gitrepos/holochain/ui-templates/react-admin/demo/react-admin/examples/demo/src/fakeServer/rest.js"],"names":["FakeRest","fetchMock","generateData","data","serializeDate","restServer","FetchServer","window","init","toggleLogging","mock","getHandler","restore"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,gBAAe,YAAM;AACjB,MAAMC,IAAI,GAAGD,YAAY,CAAC;AAAEE,IAAAA,aAAa,EAAE;AAAjB,GAAD,CAAzB;AACA,MAAMC,UAAU,GAAG,IAAIL,QAAQ,CAACM,WAAb,CAAyB,uBAAzB,CAAnB;;AACA,MAAIC,MAAJ,EAAY;AACRA,IAAAA,MAAM,CAACF,UAAP,GAAoBA,UAApB,CADQ,CACwB;AACnC;;AACDA,EAAAA,UAAU,CAACG,IAAX,CAAgBL,IAAhB;AACAE,EAAAA,UAAU,CAACI,aAAX,GAPiB,CAOW;;AAC5BR,EAAAA,SAAS,CAACS,IAAV,CAAe,6BAAf,EAA8CL,UAAU,CAACM,UAAX,EAA9C;AACA,SAAO;AAAA,WAAMV,SAAS,CAACW,OAAV,EAAN;AAAA,GAAP;AACH,CAVD","sourcesContent":["import FakeRest from 'fakerest';\nimport fetchMock from 'fetch-mock';\nimport generateData from 'data-generator';\n\nexport default () => {\n    const data = generateData({ serializeDate: true });\n    const restServer = new FakeRest.FetchServer('http://localhost:4000');\n    if (window) {\n        window.restServer = restServer; // give way to update data in the console\n    }\n    restServer.init(data);\n    restServer.toggleLogging(); // logging is off by default, enable it\n    fetchMock.mock('begin:http://localhost:4000', restServer.getHandler());\n    return () => fetchMock.restore();\n};\n"]},"metadata":{},"sourceType":"module"}