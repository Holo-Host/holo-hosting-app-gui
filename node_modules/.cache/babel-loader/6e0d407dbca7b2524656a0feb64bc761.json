{"ast":null,"code":"var _jsxFileName = \"/home/lisa/Documents/gitrepos/holochain/ui-templates/react-admin/demo/react-admin/examples/demo/src/visitors/SegmentsField.js\";\nimport React from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport { translate } from 'react-admin';\nimport segments from '../segments/data';\nvar styles = {\n  main: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: 4\n  }\n};\n\nvar SegmentsField = function SegmentsField(_ref) {\n  var record = _ref.record,\n      translate = _ref.translate;\n  return React.createElement(\"span\", {\n    style: styles.main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, record.groups && record.groups.map(function (segment) {\n    return React.createElement(Chip, {\n      key: segment,\n      style: styles.chip,\n      label: translate(segments.find(function (s) {\n        return s.id === segment;\n      }).name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    });\n  }));\n};\n\nvar TranslatedSegmentsField = translate(SegmentsField);\nTranslatedSegmentsField.defaultProps = {\n  addLabel: true,\n  source: 'groups'\n};\nexport default TranslatedSegmentsField;","map":{"version":3,"sources":["/home/lisa/Documents/gitrepos/holochain/ui-templates/react-admin/demo/react-admin/examples/demo/src/visitors/SegmentsField.js"],"names":["React","Chip","translate","segments","styles","main","display","flexWrap","chip","margin","SegmentsField","record","groups","map","segment","find","s","id","name","TranslatedSegmentsField","defaultProps","addLabel","source"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,IAAMC,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,OAAO,EAAE,MAAX;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GADK;AAEXC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV;AAFK,CAAf;;AAKA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,MAAGC,MAAH,QAAGA,MAAH;AAAA,MAAWT,SAAX,QAAWA,SAAX;AAAA,SAClB;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKM,MAAM,CAACC,MAAP,IACGD,MAAM,CAACC,MAAP,CAAcC,GAAd,CAAkB,UAAAC,OAAO;AAAA,WACrB,oBAAC,IAAD;AACI,MAAA,GAAG,EAAEA,OADT;AAEI,MAAA,KAAK,EAAEV,MAAM,CAACI,IAFlB;AAGI,MAAA,KAAK,EAAEN,SAAS,CAACC,QAAQ,CAACY,IAAT,CAAc,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,EAAF,KAASH,OAAb;AAAA,OAAf,EAAqCI,IAAtC,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADqB;AAAA,GAAzB,CAFR,CADkB;AAAA,CAAtB;;AAaA,IAAMC,uBAAuB,GAAGjB,SAAS,CAACQ,aAAD,CAAzC;AAEAS,uBAAuB,CAACC,YAAxB,GAAuC;AACnCC,EAAAA,QAAQ,EAAE,IADyB;AAEnCC,EAAAA,MAAM,EAAE;AAF2B,CAAvC;AAKA,eAAeH,uBAAf","sourcesContent":["import React from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport { translate } from 'react-admin';\nimport segments from '../segments/data';\n\nconst styles = {\n    main: { display: 'flex', flexWrap: 'wrap' },\n    chip: { margin: 4 },\n};\n\nconst SegmentsField = ({ record, translate }) => (\n    <span style={styles.main}>\n        {record.groups &&\n            record.groups.map(segment => (\n                <Chip\n                    key={segment}\n                    style={styles.chip}\n                    label={translate(segments.find(s => s.id === segment).name)}\n                />\n            ))}\n    </span>\n);\n\nconst TranslatedSegmentsField = translate(SegmentsField);\n\nTranslatedSegmentsField.defaultProps = {\n    addLabel: true,\n    source: 'groups',\n};\n\nexport default TranslatedSegmentsField;\n"]},"metadata":{},"sourceType":"module"}