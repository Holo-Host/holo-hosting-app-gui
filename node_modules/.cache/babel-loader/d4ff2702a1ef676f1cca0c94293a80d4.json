{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { createSelector } from 'reselect';\n\nvar getDefaultValues = function getDefaultValues(data, defaultValue, defaultValues) {\n  if (data === void 0) {\n    data = {};\n  }\n\n  if (defaultValue === void 0) {\n    defaultValue = {};\n  }\n\n  if (defaultValues === void 0) {\n    defaultValues = {};\n  }\n\n  var globalDefaultValue = typeof defaultValue === 'function' ? defaultValue() : defaultValue;\n  return __assign({}, globalDefaultValue, defaultValues, data);\n};\n\nvar getRecord = function getRecord(state, props) {\n  return props.record;\n};\n\nvar getDefaultValue = function getDefaultValue(state, props) {\n  return props.defaultValue;\n};\n\nvar getDefaultValuesFromState = function getDefaultValuesFromState(state) {\n  return state.admin.record;\n};\n\nexport default createSelector(getRecord, getDefaultValue, getDefaultValuesFromState, function (record, defaultValue, defaultValues) {\n  return getDefaultValues(record, defaultValue, defaultValues);\n});","map":null,"metadata":{},"sourceType":"module"}