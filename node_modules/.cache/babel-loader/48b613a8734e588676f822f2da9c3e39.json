{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { cloneElement, Children, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core/styles';\nimport FilterNoneIcon from '@material-ui/icons/FilterNone';\nimport compose from 'recompose/compose';\nimport classnames from 'classnames';\nimport { translate } from 'ra-core';\nimport Button from '../button/Button';\nimport BulkDeleteAction from './BulkDeleteAction';\n\nvar styles = function styles(theme) {\n  return {\n    bulkActionsButton: {\n      opacity: 1,\n      transition: theme.transitions.create('opacity', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      '&.fade-enter': {\n        opacity: 0\n      },\n      '&.fade-enter-done': {\n        opacity: 1\n      },\n      '&.fade-exit': {\n        opacity: 0\n      },\n      '&.fade-exit-done': {\n        opacity: 0\n      }\n    },\n    icon: {\n      marginRight: theme.spacing.unit\n    }\n  };\n};\n\nvar timeoutDurations = {\n  enter: 0,\n  exit: 300\n};\n\nvar sanitizeRestProps = function sanitizeRestProps(_a) {\n  var basePath = _a.basePath,\n      classes = _a.classes,\n      filterValues = _a.filterValues,\n      resource = _a.resource,\n      onUnselectItems = _a.onUnselectItems,\n      rest = __rest(_a, [\"basePath\", \"classes\", \"filterValues\", \"resource\", \"onUnselectItems\"]);\n\n  return rest;\n};\n/**\n * @deprecated pass a Fragment with button children as bulkActionButtons props instead\n */\n\n\nvar BulkActions =\n/** @class */\nfunction (_super) {\n  __extends(BulkActions, _super);\n\n  function BulkActions() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      isOpen: false,\n      activeAction: null\n    };\n\n    _this.storeButtonRef = function (node) {\n      _this.anchorElement = node;\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        isOpen: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        isOpen: false\n      });\n    };\n\n    _this.handleLaunchAction = function (action) {\n      _this.setState({\n        activeAction: action,\n        isOpen: false\n      });\n    };\n\n    _this.handleExitAction = function () {\n      _this.setState({\n        activeAction: null\n      });\n    };\n\n    return _this;\n  }\n\n  BulkActions.prototype.componentDidMount = function () {\n    if (process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line no-console\n      console.warn('<BulkActions> is deprecated. Use the bulkActionButtons prop instead.');\n    }\n  };\n\n  BulkActions.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        basePath = _a.basePath,\n        classes = _a.classes,\n        children = _a.children,\n        className = _a.className,\n        filterValues = _a.filterValues,\n        label = _a.label,\n        resource = _a.resource,\n        selectedIds = _a.selectedIds,\n        translate = _a.translate,\n        rest = __rest(_a, [\"basePath\", \"classes\", \"children\", \"className\", \"filterValues\", \"label\", \"resource\", \"selectedIds\", \"translate\"]);\n\n    var isOpen = this.state.isOpen;\n    return React.createElement(CSSTransition, {\n      in: selectedIds.length > 0,\n      timeout: timeoutDurations,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      classNames: \"fade\"\n    }, React.createElement(\"div\", {\n      className: classes.bulkActionsButton\n    }, React.createElement(Button, __assign({\n      buttonRef: this.storeButtonRef,\n      className: classnames('bulk-actions-button', className),\n      alignIcon: \"left\",\n      \"aria-owns\": isOpen ? 'bulk-actions-menu' : null,\n      \"aria-haspopup\": \"true\",\n      onClick: this.handleClick\n    }, sanitizeRestProps(rest), {\n      label: translate(label, {\n        _: label,\n        smart_count: selectedIds.length\n      })\n    }), React.createElement(FilterNoneIcon, {\n      className: classes.icon\n    })), React.createElement(Menu, {\n      id: \"bulk-actions-menu\",\n      anchorEl: this.anchorElement,\n      onClose: this.handleClose,\n      open: isOpen\n    }, Children.map(children, function (child, index) {\n      return React.createElement(MenuItem, __assign({\n        key: index,\n        className: classnames('bulk-actions-menu-item', child.props.className),\n        onClick: function onClick() {\n          return _this.handleLaunchAction(index);\n        }\n      }, sanitizeRestProps(rest)), translate(child.props.label));\n    })), Children.map(children, function (child, index) {\n      return _this.state.activeAction === index && cloneElement(child, {\n        basePath: basePath,\n        filterValues: filterValues,\n        onExit: _this.handleExitAction,\n        resource: resource,\n        selectedIds: selectedIds\n      });\n    })));\n  };\n\n  return BulkActions;\n}(Component);\n\nBulkActions.propTypes = {\n  basePath: PropTypes.string,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  filterValues: PropTypes.object,\n  label: PropTypes.string,\n  resource: PropTypes.string,\n  selectedIds: PropTypes.arrayOf(PropTypes.any),\n  translate: PropTypes.func.isRequired\n};\nBulkActions.defaultProps = {\n  children: React.createElement(BulkDeleteAction, null),\n  label: 'ra.action.bulk_actions',\n  selectedIds: []\n};\nvar EnhancedButton = compose(withStyles(styles), translate)(BulkActions);\nexport default EnhancedButton;","map":null,"metadata":{},"sourceType":"module"}