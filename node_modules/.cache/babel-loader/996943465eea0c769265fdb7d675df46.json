{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { TOGGLE_SIDEBAR, SET_SIDEBAR_VISIBILITY, REFRESH_VIEW, START_OPTIMISTIC_MODE, STOP_OPTIMISTIC_MODE } from '../../actions';\nvar defaultState = {\n  sidebarOpen: false,\n  optimistic: false,\n  viewVersion: 0\n};\n\nvar uiReducer = function uiReducer(previousState, action) {\n  if (previousState === void 0) {\n    previousState = defaultState;\n  }\n\n  switch (action.type) {\n    case TOGGLE_SIDEBAR:\n      return __assign({}, previousState, {\n        sidebarOpen: !previousState.sidebarOpen\n      });\n\n    case SET_SIDEBAR_VISIBILITY:\n      return __assign({}, previousState, {\n        sidebarOpen: action.payload\n      });\n\n    case REFRESH_VIEW:\n      return __assign({}, previousState, {\n        viewVersion: previousState.viewVersion + 1\n      });\n\n    case START_OPTIMISTIC_MODE:\n      return __assign({}, previousState, {\n        optimistic: true\n      });\n\n    case STOP_OPTIMISTIC_MODE:\n      return __assign({}, previousState, {\n        optimistic: false\n      });\n\n    default:\n      return previousState;\n  }\n};\n\nexport default uiReducer;","map":null,"metadata":{},"sourceType":"module"}