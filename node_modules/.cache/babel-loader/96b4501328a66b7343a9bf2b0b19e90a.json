{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { withStyles } from '@material-ui/core/styles';\nvar styles = {\n  toolbar: {\n    justifyContent: 'space-between'\n  }\n};\n\nvar ListToolbar = function ListToolbar(_a) {\n  var _b = _a.classes,\n      classes = _b === void 0 ? {} : _b,\n      filters = _a.filters,\n      actions = _a.actions,\n      bulkActions = _a.bulkActions,\n      exporter = _a.exporter,\n      rest = __rest(_a, [\"classes\", \"filters\", \"actions\", \"bulkActions\", \"exporter\"]);\n\n  return React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, filters && React.cloneElement(filters, __assign({}, rest, {\n    context: 'form'\n  })), React.createElement(\"span\", null), actions && React.cloneElement(actions, __assign({}, rest, {\n    className: classes.actions,\n    bulkActions: bulkActions,\n    exporter: exporter,\n    filters: filters\n  })));\n};\n\nListToolbar.propTypes = {\n  classes: PropTypes.object,\n  filters: PropTypes.element,\n  actions: PropTypes.element,\n  bulkActions: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n  exporter: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])\n};\nexport default withStyles(styles)(ListToolbar);","map":null,"metadata":{},"sourceType":"module"}