{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport ContentSave from '@material-ui/icons/Save';\nimport classnames from 'classnames';\nimport { showNotification, translate } from 'ra-core';\nvar styles = createStyles({\n  button: {\n    position: 'relative'\n  },\n  iconPaddingStyle: {\n    marginRight: '0.5em'\n  }\n});\n\nvar sanitizeRestProps = function sanitizeRestProps(_a) {\n  var basePath = _a.basePath,\n      className = _a.className,\n      classes = _a.classes,\n      saving = _a.saving,\n      label = _a.label,\n      invalid = _a.invalid,\n      variant = _a.variant,\n      translate = _a.translate,\n      handleSubmit = _a.handleSubmit,\n      handleSubmitWithRedirect = _a.handleSubmitWithRedirect,\n      submitOnEnter = _a.submitOnEnter,\n      record = _a.record,\n      redirect = _a.redirect,\n      resource = _a.resource,\n      locale = _a.locale,\n      showNotification = _a.showNotification,\n      rest = __rest(_a, [\"basePath\", \"className\", \"classes\", \"saving\", \"label\", \"invalid\", \"variant\", \"translate\", \"handleSubmit\", \"handleSubmitWithRedirect\", \"submitOnEnter\", \"record\", \"redirect\", \"resource\", \"locale\", \"showNotification\"]);\n\n  return rest;\n};\n\nvar SaveButton =\n/** @class */\nfunction (_super) {\n  __extends(SaveButton, _super);\n\n  function SaveButton() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.handleClick = function (e) {\n      var _a = _this.props,\n          handleSubmitWithRedirect = _a.handleSubmitWithRedirect,\n          invalid = _a.invalid,\n          redirect = _a.redirect,\n          saving = _a.saving,\n          showNotification = _a.showNotification,\n          onClick = _a.onClick;\n\n      if (saving) {\n        // prevent double submission\n        e.preventDefault();\n      } else {\n        if (invalid) {\n          showNotification('ra.message.invalid_form', 'warning');\n        } // always submit form explicitly regardless of button type\n\n\n        if (e) {\n          e.preventDefault();\n        }\n\n        handleSubmitWithRedirect(redirect)();\n      }\n\n      if (typeof onClick === 'function') {\n        onClick();\n      }\n    };\n\n    return _this;\n  }\n\n  SaveButton.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        _b = _a.classes,\n        classes = _b === void 0 ? {} : _b,\n        invalid = _a.invalid,\n        _c = _a.label,\n        label = _c === void 0 ? 'ra.action.save' : _c,\n        pristine = _a.pristine,\n        redirect = _a.redirect,\n        saving = _a.saving,\n        submitOnEnter = _a.submitOnEnter,\n        translate = _a.translate,\n        _d = _a.variant,\n        variant = _d === void 0 ? 'raised' : _d,\n        icon = _a.icon,\n        onClick = _a.onClick,\n        rest = __rest(_a, [\"className\", \"classes\", \"invalid\", \"label\", \"pristine\", \"redirect\", \"saving\", \"submitOnEnter\", \"translate\", \"variant\", \"icon\", \"onClick\"]);\n\n    var type = submitOnEnter ? 'submit' : 'button';\n    return React.createElement(Button, __assign({\n      className: classnames(classes.button, className),\n      variant: variant,\n      type: type,\n      onClick: this.handleClick,\n      color: saving ? 'default' : 'primary'\n    }, sanitizeRestProps(rest)), saving && saving.redirect === redirect ? React.createElement(CircularProgress, {\n      size: 25,\n      thickness: 2,\n      className: classes.iconPaddingStyle\n    }) : React.cloneElement(icon, {\n      className: classes.iconPaddingStyle\n    }), label && translate(label, {\n      _: label\n    }));\n  };\n\n  SaveButton.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    handleSubmitWithRedirect: PropTypes.func,\n    invalid: PropTypes.bool,\n    label: PropTypes.string,\n    pristine: PropTypes.bool,\n    redirect: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n    saving: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n    showNotification: PropTypes.func,\n    submitOnEnter: PropTypes.bool,\n    translate: PropTypes.func.isRequired,\n    variant: PropTypes.oneOf(['raised', 'flat', 'fab']),\n    icon: PropTypes.element\n  };\n  SaveButton.defaultProps = {\n    handleSubmitWithRedirect: function handleSubmitWithRedirect() {\n      return function () {};\n    },\n    icon: React.createElement(ContentSave, null)\n  };\n  return SaveButton;\n}(Component);\n\nexport { SaveButton };\nvar enhance = compose(translate, connect(undefined, {\n  showNotification: showNotification\n}), withStyles(styles));\nexport default enhance(SaveButton);","map":null,"metadata":{},"sourceType":"module"}