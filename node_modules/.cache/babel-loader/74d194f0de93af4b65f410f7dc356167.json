{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/builtin/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/possibleConstructorReturn\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/builtin/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactEventListener = _interopRequireDefault(require(\"react-event-listener\"));\n\nvar _debounce = _interopRequireDefault(require(\"debounce\")); // < 1kb payload overhead when lodash/debounce is > 3kb.\n\n\nvar styles = {\n  width: '100px',\n  height: '100px',\n  position: 'absolute',\n  top: '-10000px',\n  overflow: 'scroll',\n  msOverflowStyle: 'scrollbar'\n};\n/**\n * @ignore - internal component.\n * The component is originates from https://github.com/STORIS/react-scrollbar-size.\n * It has been moved into the core in order to minimize the bundle size.\n */\n\nvar ScrollbarSize =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(ScrollbarSize, _React$Component);\n\n  function ScrollbarSize() {\n    var _ref;\n\n    var _temp, _this;\n\n    (0, _classCallCheck2.default)(this, ScrollbarSize);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return (0, _possibleConstructorReturn2.default)(_this, (_temp = _this = (0, _possibleConstructorReturn2.default)(this, (_ref = ScrollbarSize.__proto__ || Object.getPrototypeOf(ScrollbarSize)).call.apply(_ref, [this].concat(args))), _this.handleResize = (0, _debounce.default)(function () {\n      var onChange = _this.props.onChange;\n      var prevHeight = _this.scrollbarHeight;\n      var prevWidth = _this.scrollbarWidth;\n\n      _this.setMeasurements();\n\n      if (prevHeight !== _this.scrollbarHeight || prevWidth !== _this.scrollbarWidth) {\n        onChange({\n          scrollbarHeight: _this.scrollbarHeight,\n          scrollbarWidth: _this.scrollbarWidth\n        });\n      }\n    }, 166), _this.setMeasurements = function () {\n      if (!_this.node) {\n        return;\n      }\n\n      _this.scrollbarHeight = _this.node.offsetHeight - _this.node.clientHeight;\n      _this.scrollbarWidth = _this.node.offsetWidth - _this.node.clientWidth;\n    }, _temp));\n  }\n\n  (0, _createClass2.default)(ScrollbarSize, [{\n    key: \"componentDidMount\",\n    // Corresponds to 10 frames at 60 Hz.\n    value: function componentDidMount() {\n      this.setMeasurements();\n      this.props.onLoad({\n        scrollbarHeight: this.scrollbarHeight,\n        scrollbarWidth: this.scrollbarWidth\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.handleResize.clear();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var onChange = this.props.onChange;\n      return _react.default.createElement(\"div\", null, onChange ? _react.default.createElement(_reactEventListener.default, {\n        target: \"window\",\n        onResize: this.handleResize\n      }) : null, _react.default.createElement(\"div\", {\n        style: styles,\n        ref: function ref(node) {\n          _this2.node = node;\n        }\n      }));\n    }\n  }]);\n  return ScrollbarSize;\n}(_react.default.Component);\n\nScrollbarSize.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  onChange: _propTypes.default.func.isRequired,\n  onLoad: _propTypes.default.func.isRequired\n} : {};\nvar _default = ScrollbarSize;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}