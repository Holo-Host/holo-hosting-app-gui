{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport { addField, translate } from 'ra-core';\nimport { FileInput } from './FileInput';\nvar styles = {\n  root: {\n    width: '100%'\n  },\n  dropZone: {\n    background: '#efefef',\n    cursor: 'pointer',\n    padding: '1rem',\n    textAlign: 'center',\n    color: '#999'\n  },\n  preview: {},\n  removeButton: {\n    display: 'inline-block',\n    position: 'relative',\n    float: 'left',\n    '& button': {\n      position: 'absolute',\n      top: '0.5rem',\n      right: '0.5rem',\n      minWidth: '2rem',\n      opacity: 0\n    },\n    '&:hover button': {\n      opacity: 1\n    }\n  }\n};\n\nvar ImageInput =\n/** @class */\nfunction (_super) {\n  __extends(ImageInput, _super);\n\n  function ImageInput() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ImageInput.defaultProps = __assign({}, FileInput.defaultProps, {\n    labelMultiple: 'ra.input.image.upload_several',\n    labelSingle: 'ra.input.image.upload_single'\n  });\n  return ImageInput;\n}(FileInput);\n\nexport { ImageInput };\nexport default compose(addField, translate, withStyles(styles))(ImageInput);","map":null,"metadata":{},"sourceType":"module"}