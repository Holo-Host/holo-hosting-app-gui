{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport onlyUpdateForKeys from 'recompose/onlyUpdateForKeys';\nimport { sanitizeListRestProps } from 'ra-core';\nimport CardActions from '../layout/CardActions';\nimport { CreateButton, ExportButton } from '../button';\n\nvar Actions = function Actions(_a) {\n  var bulkActions = _a.bulkActions,\n      currentSort = _a.currentSort,\n      className = _a.className,\n      resource = _a.resource,\n      filters = _a.filters,\n      displayedFilters = _a.displayedFilters,\n      exporter = _a.exporter,\n      filterValues = _a.filterValues,\n      hasCreate = _a.hasCreate,\n      basePath = _a.basePath,\n      selectedIds = _a.selectedIds,\n      onUnselectItems = _a.onUnselectItems,\n      showFilter = _a.showFilter,\n      total = _a.total,\n      rest = __rest(_a, [\"bulkActions\", \"currentSort\", \"className\", \"resource\", \"filters\", \"displayedFilters\", \"exporter\", \"filterValues\", \"hasCreate\", \"basePath\", \"selectedIds\", \"onUnselectItems\", \"showFilter\", \"total\"]);\n\n  return React.createElement(CardActions, __assign({\n    className: className\n  }, sanitizeListRestProps(rest)), bulkActions && cloneElement(bulkActions, {\n    basePath: basePath,\n    filterValues: filterValues,\n    resource: resource,\n    selectedIds: selectedIds,\n    onUnselectItems: onUnselectItems\n  }), filters && cloneElement(filters, {\n    resource: resource,\n    showFilter: showFilter,\n    displayedFilters: displayedFilters,\n    filterValues: filterValues,\n    context: 'button'\n  }), hasCreate && React.createElement(CreateButton, {\n    basePath: basePath\n  }), exporter !== false && React.createElement(ExportButton, {\n    disabled: total === 0,\n    resource: resource,\n    sort: currentSort,\n    filter: filterValues,\n    exporter: exporter\n  }));\n};\n\nActions.propTypes = {\n  bulkActions: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n  basePath: PropTypes.string,\n  className: PropTypes.string,\n  currentSort: PropTypes.object,\n  displayedFilters: PropTypes.object,\n  exporter: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  filters: PropTypes.element,\n  filterValues: PropTypes.object,\n  hasCreate: PropTypes.bool,\n  resource: PropTypes.string,\n  onUnselectItems: PropTypes.func.isRequired,\n  selectedIds: PropTypes.arrayOf(PropTypes.any),\n  showFilter: PropTypes.func,\n  total: PropTypes.number.isRequired\n};\nActions.defaultProps = {\n  selectedIds: []\n};\nexport default onlyUpdateForKeys(['resource', 'filters', 'displayedFilters', 'filterValues', 'selectedIds'])(Actions);","map":null,"metadata":{},"sourceType":"module"}