{"ast":null,"code":"var __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\nimport { CHANGE_LOCALE, changeLocaleSuccess, changeLocaleFailure } from '../actions';\n/**\n * The i18n side effect reacts to the CHANGE_LOCALE actions, calls\n * the i18nProvider (which may be asynchronous) with the requested locale,\n * and dispatches changeLocaleSuccess or changeLocaleFailure with the result.\n */\n\nexport default (function (i18nProvider) {\n  function loadMessages(action) {\n    var locale, messages, err_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          locale = action.payload;\n          _a.label = 1;\n\n        case 1:\n          _a.trys.push([1, 4,, 6]);\n\n          return [4\n          /*yield*/\n          , call(i18nProvider, locale)];\n\n        case 2:\n          messages = _a.sent();\n          return [4\n          /*yield*/\n          , put(changeLocaleSuccess(locale, messages))];\n\n        case 3:\n          _a.sent();\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 4:\n          err_1 = _a.sent();\n          return [4\n          /*yield*/\n          , put(changeLocaleFailure(action.payload.locale, err_1))];\n\n        case 5:\n          _a.sent();\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 6:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  }\n\n  return function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , all([takeLatest(CHANGE_LOCALE, loadMessages)])];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  };\n});","map":null,"metadata":{},"sourceType":"module"}