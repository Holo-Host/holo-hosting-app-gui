{"ast":null,"code":"'use strict';\n\nvar keys = require('object-keys');\n\nvar foreach = require('foreach');\n\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol() === 'symbol';\nvar toStr = Object.prototype.toString;\n\nvar isFunction = function isFunction(fn) {\n  return typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function arePropertyDescriptorsSupported() {\n  var obj = {};\n\n  try {\n    Object.defineProperty(obj, 'x', {\n      enumerable: false,\n      value: obj\n    });\n    /* eslint-disable no-unused-vars, no-restricted-syntax */\n\n    for (var _ in obj) {\n      return false;\n    }\n    /* eslint-enable no-unused-vars, no-restricted-syntax */\n\n\n    return obj.x === obj;\n  } catch (e) {\n    /* this is IE 8. */\n    return false;\n  }\n};\n\nvar supportsDescriptors = Object.defineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function defineProperty(object, name, value, predicate) {\n  if (name in object && (!isFunction(predicate) || !predicate())) {\n    return;\n  }\n\n  if (supportsDescriptors) {\n    Object.defineProperty(object, name, {\n      configurable: true,\n      enumerable: false,\n      value: value,\n      writable: true\n    });\n  } else {\n    object[name] = value;\n  }\n};\n\nvar defineProperties = function defineProperties(object, map) {\n  var predicates = arguments.length > 2 ? arguments[2] : {};\n  var props = keys(map);\n\n  if (hasSymbols) {\n    props = props.concat(Object.getOwnPropertySymbols(map));\n  }\n\n  foreach(props, function (name) {\n    defineProperty(object, name, map[name], predicates[name]);\n  });\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\nmodule.exports = defineProperties;","map":null,"metadata":{},"sourceType":"script"}