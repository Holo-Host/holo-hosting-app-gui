{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport pure from 'recompose/pure';\nimport Button from '@material-ui/core/Button';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport compose from 'recompose/compose';\nimport { translate } from 'ra-core';\n\nvar styles = function styles(theme) {\n  return createStyles({\n    actions: {\n      flexShrink: 0,\n      color: theme.palette.text.secondary,\n      marginLeft: 20\n    },\n    hellip: {\n      padding: '1.2em'\n    }\n  });\n};\n\nvar PaginationActions =\n/** @class */\nfunction (_super) {\n  __extends(PaginationActions, _super);\n\n  function PaginationActions() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.getNbPages = function () {\n      return Math.ceil(_this.props.count / _this.props.rowsPerPage) || 1;\n    };\n\n    _this.prevPage = function (event) {\n      if (_this.props.page === 0) {\n        throw new Error(_this.props.translate('ra.navigation.page_out_from_begin'));\n      }\n\n      _this.props.onChangePage(event, _this.props.page - 1);\n    };\n\n    _this.nextPage = function (event) {\n      if (_this.props.page > _this.getNbPages() - 1) {\n        throw new Error(_this.props.translate('ra.navigation.page_out_from_end'));\n      }\n\n      _this.props.onChangePage(event, _this.props.page + 1);\n    };\n\n    _this.gotoPage = function (event) {\n      var page = parseInt(event.currentTarget.dataset.page, 10);\n\n      if (page < 0 || page > _this.getNbPages() - 1) {\n        throw new Error(_this.props.translate('ra.navigation.page_out_of_boundaries', {\n          page: page + 1\n        }));\n      }\n\n      _this.props.onChangePage(event, page);\n    };\n\n    return _this;\n  }\n  /**\n   * Warning: material-ui's page is 0-based\n   */\n\n\n  PaginationActions.prototype.range = function () {\n    var _a = this.props,\n        page = _a.page,\n        rowsPerPage = _a.rowsPerPage,\n        count = _a.count;\n    var nbPages = Math.ceil(count / rowsPerPage) || 1;\n\n    if (isNaN(page) || nbPages === 1) {\n      return [];\n    }\n\n    var input = []; // display page links around the current page\n\n    if (page > 1) {\n      input.push(1);\n    }\n\n    if (page === 3) {\n      input.push(2);\n    }\n\n    if (page > 3) {\n      input.push('.');\n    }\n\n    if (page > 0) {\n      input.push(page);\n    }\n\n    input.push(page + 1);\n\n    if (page < nbPages - 1) {\n      input.push(page + 2);\n    }\n\n    if (page === nbPages - 4) {\n      input.push(nbPages - 1);\n    }\n\n    if (page < nbPages - 4) {\n      input.push('.');\n    }\n\n    if (page < nbPages - 2) {\n      input.push(nbPages);\n    }\n\n    return input;\n  };\n\n  PaginationActions.prototype.renderPageNums = function () {\n    var _this = this;\n\n    var _a = this.props.classes,\n        classes = _a === void 0 ? {} : _a;\n    return this.range().map(function (pageNum, index) {\n      return pageNum === '.' ? React.createElement(\"span\", {\n        key: \"hyphen_\" + index,\n        className: classes.hellip\n      }, \"\\u2026\") : React.createElement(Button, {\n        className: \"page-number\",\n        color: pageNum === _this.props.page + 1 ? 'default' : 'primary',\n        key: pageNum,\n        \"data-page\": pageNum - 1,\n        onClick: _this.gotoPage,\n        size: \"small\"\n      }, pageNum);\n    });\n  };\n\n  PaginationActions.prototype.render = function () {\n    var _a = this.props,\n        _b = _a.classes,\n        classes = _b === void 0 ? {} : _b,\n        page = _a.page,\n        translate = _a.translate;\n    var nbPages = this.getNbPages();\n    if (nbPages === 1) return React.createElement(\"div\", {\n      className: classes.actions\n    });\n    return React.createElement(\"div\", {\n      className: classes.actions\n    }, page > 0 && React.createElement(Button, {\n      color: \"primary\",\n      key: \"prev\",\n      onClick: this.prevPage,\n      className: \"previous-page\",\n      size: \"small\"\n    }, React.createElement(ChevronLeft, null), translate('ra.navigation.prev')), this.renderPageNums(), page !== nbPages - 1 && React.createElement(Button, {\n      color: \"primary\",\n      key: \"next\",\n      onClick: this.nextPage,\n      className: \"next-page\",\n      size: \"small\"\n    }, translate('ra.navigation.next'), React.createElement(ChevronRight, null)));\n  };\n\n  return PaginationActions;\n}(Component);\n\nexport { PaginationActions };\n/**\n * PaginationActions propTypes are copied over from material-uiâ€™s\n * TablePaginationActions propTypes. See\n * https://github.com/mui-org/material-ui/blob/869692ecf3812bc4577ed4dde81a9911c5949695/packages/material-ui/src/TablePaginationActions/TablePaginationActions.js#L53-L85\n * for reference.\n */\n\nPaginationActions.propTypes = {\n  backIconButtonProps: PropTypes.object,\n  count: PropTypes.number.isRequired,\n  nextIconButtonProps: PropTypes.object,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\nvar enhance = compose(pure, translate, withStyles(styles));\nexport default enhance(PaginationActions);","map":null,"metadata":{},"sourceType":"module"}