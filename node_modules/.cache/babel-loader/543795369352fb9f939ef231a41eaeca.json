{"ast":null,"code":"var __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { all, put, call, select, takeEvery } from 'redux-saga/effects';\nimport { push, replace } from 'react-router-redux';\nimport { showNotification, hideNotification } from '../actions/notificationActions';\nimport { USER_LOGIN, USER_LOGIN_LOADING, USER_LOGIN_SUCCESS, USER_LOGIN_FAILURE, USER_CHECK, USER_LOGOUT } from '../actions/authActions';\nimport { FETCH_ERROR } from '../actions/fetchActions';\nimport { AUTH_LOGIN, AUTH_CHECK, AUTH_ERROR, AUTH_LOGOUT } from '../auth';\n\nvar nextPathnameSelector = function nextPathnameSelector(state) {\n  var locationState = state.router.location.state;\n  return locationState && locationState.nextPathname;\n};\n\nvar currentPathnameSelector = function currentPathnameSelector(state) {\n  return state.router.location;\n};\n\nexport default (function (authProvider) {\n  if (!authProvider) {\n    return function () {\n      return null;\n    };\n  }\n\n  function handleAuth(action) {\n    var type, payload, error, meta, _a, authPayload, redirectTo, e_1, errorMessage, error_1, e_2, nextPathname;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          type = action.type, payload = action.payload, error = action.error, meta = action.meta;\n          _a = type;\n\n          switch (_a) {\n            case USER_LOGIN:\n              return [3\n              /*break*/\n              , 1];\n\n            case USER_CHECK:\n              return [3\n              /*break*/\n              , 11];\n\n            case USER_LOGOUT:\n              return [3\n              /*break*/\n              , 17];\n\n            case FETCH_ERROR:\n              return [3\n              /*break*/\n              , 20];\n          }\n\n          return [3\n          /*break*/\n          , 29];\n\n        case 1:\n          _b.trys.push([1, 7,, 10]);\n\n          return [4\n          /*yield*/\n          , put({\n            type: USER_LOGIN_LOADING\n          })];\n\n        case 2:\n          _b.sent();\n\n          return [4\n          /*yield*/\n          , call(authProvider, AUTH_LOGIN, payload)];\n\n        case 3:\n          authPayload = _b.sent();\n          return [4\n          /*yield*/\n          , put({\n            type: USER_LOGIN_SUCCESS,\n            payload: authPayload\n          })];\n\n        case 4:\n          _b.sent();\n\n          return [4\n          /*yield*/\n          , meta.pathName || select(nextPathnameSelector)];\n\n        case 5:\n          redirectTo = _b.sent();\n          return [4\n          /*yield*/\n          , put(push(redirectTo || '/'))];\n\n        case 6:\n          _b.sent();\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 7:\n          e_1 = _b.sent();\n          return [4\n          /*yield*/\n          , put({\n            type: USER_LOGIN_FAILURE,\n            error: e_1,\n            meta: {\n              auth: true\n            }\n          })];\n\n        case 8:\n          _b.sent();\n\n          errorMessage = typeof e_1 === 'string' ? e_1 : typeof e_1 === 'undefined' || !e_1.message ? 'ra.auth.sign_in_error' : e_1.message;\n          return [4\n          /*yield*/\n          , put(showNotification(errorMessage, 'warning'))];\n\n        case 9:\n          _b.sent();\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 10:\n          return [3\n          /*break*/\n          , 29];\n\n        case 11:\n          _b.trys.push([11, 13,, 16]);\n\n          return [4\n          /*yield*/\n          , call(authProvider, AUTH_CHECK, payload)];\n\n        case 12:\n          _b.sent();\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 13:\n          error_1 = _b.sent();\n          return [4\n          /*yield*/\n          , call(authProvider, AUTH_LOGOUT)];\n\n        case 14:\n          _b.sent();\n\n          return [4\n          /*yield*/\n          , put(replace({\n            pathname: error_1 && error_1.redirectTo || '/login',\n            state: {\n              nextPathname: meta.pathName\n            }\n          }))];\n\n        case 15:\n          _b.sent();\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 16:\n          return [3\n          /*break*/\n          , 29];\n\n        case 17:\n          return [4\n          /*yield*/\n          , put(push(action.payload && action.payload.redirectTo || '/login'))];\n\n        case 18:\n          _b.sent();\n\n          return [4\n          /*yield*/\n          , call(authProvider, AUTH_LOGOUT)];\n\n        case 19:\n          _b.sent();\n\n          return [3\n          /*break*/\n          , 29];\n\n        case 20:\n          _b.trys.push([20, 22,, 28]);\n\n          return [4\n          /*yield*/\n          , call(authProvider, AUTH_ERROR, error)];\n\n        case 21:\n          _b.sent();\n\n          return [3\n          /*break*/\n          , 28];\n\n        case 22:\n          e_2 = _b.sent();\n          return [4\n          /*yield*/\n          , select(currentPathnameSelector)];\n\n        case 23:\n          nextPathname = _b.sent();\n          return [4\n          /*yield*/\n          , call(authProvider, AUTH_LOGOUT)];\n\n        case 24:\n          _b.sent();\n\n          return [4\n          /*yield*/\n          , put(push({\n            pathname: '/login',\n            state: {\n              nextPathname: nextPathname\n            }\n          }))];\n\n        case 25:\n          _b.sent();\n\n          return [4\n          /*yield*/\n          , put(hideNotification())];\n\n        case 26:\n          _b.sent();\n\n          return [4\n          /*yield*/\n          , put(showNotification('ra.notification.logged_out', 'warning'))];\n\n        case 27:\n          _b.sent();\n\n          return [3\n          /*break*/\n          , 28];\n\n        case 28:\n          return [3\n          /*break*/\n          , 29];\n\n        case 29:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  }\n\n  return function watchAuthActions() {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , all([takeEvery(function (action) {\n            return action.meta && action.meta.auth;\n          }, handleAuth), takeEvery(FETCH_ERROR, handleAuth)])];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  };\n});","map":null,"metadata":{},"sourceType":"module"}