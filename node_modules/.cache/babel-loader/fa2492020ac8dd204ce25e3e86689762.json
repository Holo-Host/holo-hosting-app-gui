{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React, { createElement, Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport WithPermissions from './auth/WithPermissions';\nimport { registerResource as registerResourceAction, unregisterResource as unregisterResourceAction } from './actions';\n\nvar Resource =\n/** @class */\nfunction (_super) {\n  __extends(Resource, _super);\n\n  function Resource() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Resource.prototype.componentWillMount = function () {\n    var _a = this.props,\n        context = _a.context,\n        name = _a.name,\n        list = _a.list,\n        create = _a.create,\n        edit = _a.edit,\n        show = _a.show,\n        options = _a.options,\n        icon = _a.icon,\n        registerResource = _a.registerResource;\n\n    if (context === 'registration') {\n      var resource = {\n        name: name,\n        options: options,\n        hasList: !!list,\n        hasEdit: !!edit,\n        hasShow: !!show,\n        hasCreate: !!create,\n        icon: icon\n      };\n      registerResource(resource);\n    }\n  };\n\n  Resource.prototype.componentWillUnmount = function () {\n    var _a = this.props,\n        context = _a.context,\n        name = _a.name,\n        unregisterResource = _a.unregisterResource;\n\n    if (context === 'registration') {\n      unregisterResource(name);\n    }\n  };\n\n  Resource.prototype.render = function () {\n    var _a = this.props,\n        match = _a.match,\n        context = _a.context,\n        name = _a.name,\n        list = _a.list,\n        create = _a.create,\n        edit = _a.edit,\n        show = _a.show,\n        options = _a.options;\n\n    if (context === 'registration') {\n      return null;\n    }\n\n    var resource = {\n      resource: name,\n      options: options,\n      hasList: !!list,\n      hasEdit: !!edit,\n      hasShow: !!show,\n      hasCreate: !!create\n    };\n    var basePath = match.url;\n    return React.createElement(Switch, null, create && React.createElement(Route, {\n      path: match.url + \"/create\",\n      render: function render(routeProps) {\n        return React.createElement(WithPermissions, __assign({\n          render: function render(props) {\n            return createElement(create, __assign({\n              basePath: basePath\n            }, props));\n          }\n        }, routeProps, resource));\n      }\n    }), show && React.createElement(Route, {\n      path: match.url + \"/:id/show\",\n      render: function render(routeProps) {\n        return React.createElement(WithPermissions, __assign({\n          render: function render(props) {\n            return createElement(show, __assign({\n              basePath: basePath,\n              id: decodeURIComponent(props.match.params.id)\n            }, props));\n          }\n        }, routeProps, resource));\n      }\n    }), edit && React.createElement(Route, {\n      path: match.url + \"/:id\",\n      render: function render(routeProps) {\n        return React.createElement(WithPermissions, __assign({\n          render: function render(props) {\n            return createElement(edit, __assign({\n              basePath: basePath,\n              id: decodeURIComponent(props.match.params.id)\n            }, props));\n          }\n        }, routeProps, resource));\n      }\n    }), list && React.createElement(Route, {\n      path: \"\" + match.url,\n      render: function render(routeProps) {\n        return React.createElement(WithPermissions, __assign({\n          render: function render(props) {\n            return createElement(list, __assign({\n              basePath: basePath\n            }, props));\n          }\n        }, routeProps, resource));\n      }\n    }));\n  };\n\n  Resource.defaultProps = {\n    context: 'route',\n    options: {}\n  };\n  return Resource;\n}(Component);\n\nexport { Resource };\nvar ConnectedResource = connect(null, {\n  registerResource: registerResourceAction,\n  unregisterResource: unregisterResourceAction\n})( // Necessary casting because of https://github.com/DefinitelyTyped/DefinitelyTyped/issues/19989#issuecomment-432752918\nResource); // Necessary casting because of https://github.com/DefinitelyTyped/DefinitelyTyped/issues/19989#issuecomment-432752918\n\nexport default ConnectedResource;","map":null,"metadata":{},"sourceType":"module"}