{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Button from '@material-ui/core/Button';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport compose from 'recompose/compose';\nimport classnames from 'classnames';\nimport { hideNotification, getNotification, translate, undo, complete } from 'ra-core';\n\nvar styles = function styles(theme) {\n  return createStyles({\n    confirm: {\n      backgroundColor: theme.palette.background.default\n    },\n    warning: {\n      backgroundColor: theme.palette.error.light\n    },\n    undo: {\n      color: theme.palette.primary.light\n    }\n  });\n};\n\nvar Notification =\n/** @class */\nfunction (_super) {\n  __extends(Notification, _super);\n\n  function Notification() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      open: false\n    };\n\n    _this.componentWillMount = function () {\n      _this.setOpenState(_this.props);\n    };\n\n    _this.componentWillReceiveProps = function (nextProps) {\n      _this.setOpenState(nextProps);\n    };\n\n    _this.setOpenState = function (_a) {\n      var notification = _a.notification;\n\n      _this.setState({\n        open: !!notification\n      });\n    };\n\n    _this.handleRequestClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleExited = function () {\n      var _a = _this.props,\n          notification = _a.notification,\n          hideNotification = _a.hideNotification,\n          complete = _a.complete;\n\n      if (notification && notification.undoable) {\n        complete();\n      }\n\n      hideNotification();\n    };\n\n    return _this;\n  }\n\n  Notification.prototype.render = function () {\n    var _a = this.props,\n        undo = _a.undo,\n        complete = _a.complete,\n        classes = _a.classes,\n        className = _a.className,\n        type = _a.type,\n        translate = _a.translate,\n        notification = _a.notification,\n        autoHideDuration = _a.autoHideDuration,\n        hideNotification = _a.hideNotification,\n        rest = __rest(_a, [\"undo\", \"complete\", \"classes\", \"className\", \"type\", \"translate\", \"notification\", \"autoHideDuration\", \"hideNotification\"]);\n\n    var warning = classes.warning,\n        confirm = classes.confirm,\n        undoClass = classes.undo,\n        // Rename classes.undo to undoClass in this scope to avoid name conflicts\n    snackbarClasses = __rest(classes, [\"warning\", \"confirm\", \"undo\"]);\n\n    return React.createElement(Snackbar, __assign({\n      open: this.state.open,\n      message: notification && notification.message && translate(notification.message, notification.messageArgs),\n      autoHideDuration: notification && notification.autoHideDuration || autoHideDuration,\n      disableWindowBlurListener: notification && notification.undoable,\n      onExited: this.handleExited,\n      onClose: this.handleRequestClose,\n      ContentProps: {\n        className: classnames(classes[notification && notification.type || type], className)\n      },\n      action: notification && notification.undoable ? React.createElement(Button, {\n        color: \"primary\",\n        className: undoClass,\n        size: \"small\",\n        onClick: undo\n      }, translate('ra.action.undo')) : null,\n      classes: snackbarClasses\n    }, rest));\n  };\n\n  return Notification;\n}(React.Component);\n\nNotification.propTypes = {\n  complete: PropTypes.func,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  notification: PropTypes.shape({\n    message: PropTypes.string,\n    type: PropTypes.string,\n    autoHideDuration: PropTypes.number,\n    messageArgs: PropTypes.object\n  }),\n  type: PropTypes.string,\n  hideNotification: PropTypes.func.isRequired,\n  autoHideDuration: PropTypes.number,\n  translate: PropTypes.func.isRequired,\n  undo: PropTypes.func\n};\nNotification.defaultProps = {\n  type: 'info',\n  autoHideDuration: 4000\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    notification: getNotification(state)\n  };\n};\n\nexport default compose(translate, withStyles(styles), connect(mapStateToProps, {\n  complete: complete,\n  hideNotification: hideNotification,\n  undo: undo\n}))(Notification);","map":null,"metadata":{},"sourceType":"module"}