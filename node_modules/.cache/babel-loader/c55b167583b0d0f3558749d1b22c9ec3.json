{"ast":null,"code":"var _jsxFileName = \"/home/lisa/Documents/gitrepos/holochain/holo/holo-hosting/No2_holo-hosting-app_GUI/holo-hosting-app_GUI/src/reviews/ReviewListMobile.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { linkToRecord, ReferenceField, FunctionField, TextField } from 'react-admin';\nimport AvatarField from '../visitors/AvatarField';\nvar styles = {\n  root: {\n    width: '100vw'\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'inherit'\n  },\n  inline: {\n    display: 'inline'\n  }\n};\n\nvar ReviewMobileList = function ReviewMobileList(_ref) {\n  var basePath = _ref.basePath,\n      _ref$classes = _ref.classes,\n      classes = _ref$classes === void 0 ? {} : _ref$classes,\n      className = _ref.className,\n      data = _ref.data,\n      ids = _ref.ids,\n      isLoading = _ref.isLoading,\n      total = _ref.total;\n  return (isLoading || total > 0) && React.createElement(List, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, ids.map(function (id) {\n    return React.createElement(Link, {\n      to: linkToRecord(basePath, id),\n      className: classes.link,\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(ListItemAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(ReferenceField, {\n      record: data[id],\n      source: \"customer_id\",\n      reference: \"customers\",\n      basePath: basePath,\n      linkType: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(AvatarField, {\n      size: 40,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }))), React.createElement(ListItemText, {\n      primary: React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(ReferenceField, {\n        record: data[id],\n        source: \"customer_id\",\n        reference: \"customers\",\n        basePath: basePath,\n        linkType: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(FunctionField, {\n        render: function render(record) {\n          return \"\".concat(record.first_name, \" \").concat(record.last_name);\n        },\n        variant: \"subheading\",\n        className: classes.inline,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), ' ', \"on\", ' ', React.createElement(ReferenceField, {\n        record: data[id],\n        source: \"product_id\",\n        reference: \"products\",\n        basePath: basePath,\n        linkType: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        source: \"reference\",\n        variant: \"subheading\",\n        className: classes.inline,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))),\n      secondary: data[id].comment,\n      secondaryTypographyProps: {\n        noWrap: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })));\n  }));\n};\n\nReviewMobileList.propTypes = {\n  basePath: PropTypes.string,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  data: PropTypes.object,\n  hasBulkActions: PropTypes.bool.isRequired,\n  ids: PropTypes.array,\n  leftAvatar: PropTypes.func,\n  leftIcon: PropTypes.func,\n  linkType: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).isRequired,\n  onToggleItem: PropTypes.func,\n  primaryText: PropTypes.func,\n  rightAvatar: PropTypes.func,\n  rightIcon: PropTypes.func,\n  secondaryText: PropTypes.func,\n  selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n  tertiaryText: PropTypes.func\n};\nReviewMobileList.defaultProps = {\n  linkType: 'edit',\n  hasBulkActions: false,\n  selectedIds: []\n};\nexport default withStyles(styles)(ReviewMobileList);","map":{"version":3,"sources":["/home/lisa/Documents/gitrepos/holochain/holo/holo-hosting/No2_holo-hosting-app_GUI/holo-hosting-app_GUI/src/reviews/ReviewListMobile.js"],"names":["React","Fragment","PropTypes","List","ListItem","ListItemAvatar","ListItemText","withStyles","Link","linkToRecord","ReferenceField","FunctionField","TextField","AvatarField","styles","root","width","link","textDecoration","color","inline","display","ReviewMobileList","basePath","classes","className","data","ids","isLoading","total","map","id","record","first_name","last_name","comment","noWrap","propTypes","string","object","hasBulkActions","bool","isRequired","array","leftAvatar","func","leftIcon","linkType","oneOfType","onToggleItem","primaryText","rightAvatar","rightIcon","secondaryText","selectedIds","arrayOf","any","tertiaryText","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACIC,YADJ,EAEIC,cAFJ,EAGIC,aAHJ,EAIIC,SAJJ,QAKO,aALP;AAOA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,IAAMC,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE;AADL,GADK;AAIXC,EAAAA,IAAI,EAAE;AACFC,IAAAA,cAAc,EAAE,MADd;AAEFC,IAAAA,KAAK,EAAE;AAFL,GAJK;AAQXC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL;AARG,CAAf;;AAaA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MACrBC,QADqB,QACrBA,QADqB;AAAA,0BAErBC,OAFqB;AAAA,MAErBA,OAFqB,6BAEX,EAFW;AAAA,MAGrBC,SAHqB,QAGrBA,SAHqB;AAAA,MAIrBC,IAJqB,QAIrBA,IAJqB;AAAA,MAKrBC,GALqB,QAKrBA,GALqB;AAAA,MAMrBC,SANqB,QAMrBA,SANqB;AAAA,MAOrBC,KAPqB,QAOrBA,KAPqB;AAAA,SASrB,CAACD,SAAS,IAAIC,KAAK,GAAG,CAAtB,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEL,OAAO,CAACT,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKY,GAAG,CAACG,GAAJ,CAAQ,UAAAC,EAAE;AAAA,WACP,oBAAC,IAAD;AACI,MAAA,EAAE,EAAEtB,YAAY,CAACc,QAAD,EAAWQ,EAAX,CADpB;AAEI,MAAA,SAAS,EAAEP,OAAO,CAACP,IAFvB;AAGI,MAAA,GAAG,EAAEc,EAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,cAAD;AACI,MAAA,MAAM,EAAEL,IAAI,CAACK,EAAD,CADhB;AAEI,MAAA,MAAM,EAAC,aAFX;AAGI,MAAA,SAAS,EAAC,WAHd;AAII,MAAA,QAAQ,EAAER,QAJd;AAKI,MAAA,QAAQ,EAAE,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ,CADJ,EAYI,oBAAC,YAAD;AACI,MAAA,OAAO,EACH,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AACI,QAAA,MAAM,EAAEG,IAAI,CAACK,EAAD,CADhB;AAEI,QAAA,MAAM,EAAC,aAFX;AAGI,QAAA,SAAS,EAAC,WAHd;AAII,QAAA,QAAQ,EAAER,QAJd;AAKI,QAAA,QAAQ,EAAE,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,oBAAC,aAAD;AACI,QAAA,MAAM,EAAE,gBAAAS,MAAM;AAAA,2BACPA,MAAM,CAACC,UADA,cAEND,MAAM,CAACE,SAFD;AAAA,SADlB;AAMI,QAAA,OAAO,EAAC,YANZ;AAOI,QAAA,SAAS,EAAEV,OAAO,CAACJ,MAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CADJ,EAiBsB,GAjBtB,QAkBO,GAlBP,EAmBI,oBAAC,cAAD;AACI,QAAA,MAAM,EAAEM,IAAI,CAACK,EAAD,CADhB;AAEI,QAAA,MAAM,EAAC,YAFX;AAGI,QAAA,SAAS,EAAC,UAHd;AAII,QAAA,QAAQ,EAAER,QAJd;AAKI,QAAA,QAAQ,EAAE,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,oBAAC,SAAD;AACI,QAAA,MAAM,EAAC,WADX;AAEI,QAAA,OAAO,EAAC,YAFZ;AAGI,QAAA,SAAS,EAAEC,OAAO,CAACJ,MAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CAnBJ,CAFR;AAoCI,MAAA,SAAS,EAAEM,IAAI,CAACK,EAAD,CAAJ,CAASI,OApCxB;AAqCI,MAAA,wBAAwB,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OArC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CALJ,CADO;AAAA,GAAV,CADL,CAViB;AAAA,CAAzB;;AA0EAd,gBAAgB,CAACe,SAAjB,GAA6B;AACzBd,EAAAA,QAAQ,EAAErB,SAAS,CAACoC,MADK;AAEzBd,EAAAA,OAAO,EAAEtB,SAAS,CAACqC,MAFM;AAGzBd,EAAAA,SAAS,EAAEvB,SAAS,CAACoC,MAHI;AAIzBZ,EAAAA,IAAI,EAAExB,SAAS,CAACqC,MAJS;AAKzBC,EAAAA,cAAc,EAAEtC,SAAS,CAACuC,IAAV,CAAeC,UALN;AAMzBf,EAAAA,GAAG,EAAEzB,SAAS,CAACyC,KANU;AAOzBC,EAAAA,UAAU,EAAE1C,SAAS,CAAC2C,IAPG;AAQzBC,EAAAA,QAAQ,EAAE5C,SAAS,CAAC2C,IARK;AASzBE,EAAAA,QAAQ,EAAE7C,SAAS,CAAC8C,SAAV,CAAoB,CAAC9C,SAAS,CAACoC,MAAX,EAAmBpC,SAAS,CAACuC,IAA7B,CAApB,EACLC,UAVoB;AAWzBO,EAAAA,YAAY,EAAE/C,SAAS,CAAC2C,IAXC;AAYzBK,EAAAA,WAAW,EAAEhD,SAAS,CAAC2C,IAZE;AAazBM,EAAAA,WAAW,EAAEjD,SAAS,CAAC2C,IAbE;AAczBO,EAAAA,SAAS,EAAElD,SAAS,CAAC2C,IAdI;AAezBQ,EAAAA,aAAa,EAAEnD,SAAS,CAAC2C,IAfA;AAgBzBS,EAAAA,WAAW,EAAEpD,SAAS,CAACqD,OAAV,CAAkBrD,SAAS,CAACsD,GAA5B,EAAiCd,UAhBrB;AAiBzBe,EAAAA,YAAY,EAAEvD,SAAS,CAAC2C;AAjBC,CAA7B;AAoBAvB,gBAAgB,CAACoC,YAAjB,GAAgC;AAC5BX,EAAAA,QAAQ,EAAE,MADkB;AAE5BP,EAAAA,cAAc,EAAE,KAFY;AAG5Bc,EAAAA,WAAW,EAAE;AAHe,CAAhC;AAMA,eAAe/C,UAAU,CAACO,MAAD,CAAV,CAAmBQ,gBAAnB,CAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport {\n    linkToRecord,\n    ReferenceField,\n    FunctionField,\n    TextField,\n} from 'react-admin';\n\nimport AvatarField from '../visitors/AvatarField';\n\nconst styles = {\n    root: {\n        width: '100vw',\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'inherit',\n    },\n    inline: {\n        display: 'inline',\n    },\n};\n\nconst ReviewMobileList = ({\n    basePath,\n    classes = {},\n    className,\n    data,\n    ids,\n    isLoading,\n    total,\n}) =>\n    (isLoading || total > 0) && (\n        <List className={classes.root}>\n            {ids.map(id => (\n                <Link\n                    to={linkToRecord(basePath, id)}\n                    className={classes.link}\n                    key={id}\n                >\n                    <ListItem button>\n                        <ListItemAvatar>\n                            <ReferenceField\n                                record={data[id]}\n                                source=\"customer_id\"\n                                reference=\"customers\"\n                                basePath={basePath}\n                                linkType={false}\n                            >\n                                <AvatarField size={40} />\n                            </ReferenceField>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={\n                                <Fragment>\n                                    <ReferenceField\n                                        record={data[id]}\n                                        source=\"customer_id\"\n                                        reference=\"customers\"\n                                        basePath={basePath}\n                                        linkType={false}\n                                    >\n                                        <FunctionField\n                                            render={record =>\n                                                `${record.first_name} ${\n                                                    record.last_name\n                                                }`\n                                            }\n                                            variant=\"subheading\"\n                                            className={classes.inline}\n                                        />\n                                    </ReferenceField>{' '}\n                                    on{' '}\n                                    <ReferenceField\n                                        record={data[id]}\n                                        source=\"product_id\"\n                                        reference=\"products\"\n                                        basePath={basePath}\n                                        linkType={false}\n                                    >\n                                        <TextField\n                                            source=\"reference\"\n                                            variant=\"subheading\"\n                                            className={classes.inline}\n                                        />\n                                    </ReferenceField>\n                                </Fragment>\n                            }\n                            secondary={data[id].comment}\n                            secondaryTypographyProps={{ noWrap: true }}\n                        />\n                    </ListItem>\n                </Link>\n            ))}\n        </List>\n    );\n\nReviewMobileList.propTypes = {\n    basePath: PropTypes.string,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    data: PropTypes.object,\n    hasBulkActions: PropTypes.bool.isRequired,\n    ids: PropTypes.array,\n    leftAvatar: PropTypes.func,\n    leftIcon: PropTypes.func,\n    linkType: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n        .isRequired,\n    onToggleItem: PropTypes.func,\n    primaryText: PropTypes.func,\n    rightAvatar: PropTypes.func,\n    rightIcon: PropTypes.func,\n    secondaryText: PropTypes.func,\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n    tertiaryText: PropTypes.func,\n};\n\nReviewMobileList.defaultProps = {\n    linkType: 'edit',\n    hasBulkActions: false,\n    selectedIds: [],\n};\n\nexport default withStyles(styles)(ReviewMobileList);\n"]},"metadata":{},"sourceType":"module"}