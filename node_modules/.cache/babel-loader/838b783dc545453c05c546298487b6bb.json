{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, propTypes, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { translate, userLogin } from 'ra-core';\n\nvar styles = function styles() {\n  return createStyles({\n    form: {\n      padding: '0 1em 1em 1em'\n    },\n    input: {\n      marginTop: '1em'\n    },\n    button: {\n      width: '100%'\n    }\n  });\n}; // see http://redux-form.com/6.4.3/examples/material-ui/\n\n\nvar renderInput = function renderInput(_a) {\n  var _b = _a.meta,\n      _c = _b === void 0 ? {\n    touched: false,\n    error: ''\n  } : _b,\n      touched = _c.touched,\n      error = _c.error,\n      inputProps = __rest(_a.input, []),\n      // eslint-disable-line react/prop-types\n  props = __rest(_a, [\"meta\", \"input\"]);\n\n  return React.createElement(TextField, __assign({\n    error: !!(touched && error),\n    helperText: touched && error\n  }, inputProps, props, {\n    fullWidth: true\n  }));\n};\n\nvar login = function login(auth, dispatch, _a) {\n  var redirectTo = _a.redirectTo;\n  return dispatch(userLogin(auth, redirectTo));\n};\n\nvar LoginForm = function LoginForm(_a) {\n  var classes = _a.classes,\n      isLoading = _a.isLoading,\n      handleSubmit = _a.handleSubmit,\n      translate = _a.translate;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit(login)\n  }, React.createElement(\"div\", {\n    className: classes.form\n  }, React.createElement(\"div\", {\n    className: classes.input\n  }, React.createElement(Field, {\n    autoFocus: true,\n    id: \"username\",\n    name: \"username\",\n    component: renderInput,\n    label: translate('ra.auth.username'),\n    disabled: isLoading\n  })), React.createElement(\"div\", {\n    className: classes.input\n  }, React.createElement(Field, {\n    id: \"password\",\n    name: \"password\",\n    component: renderInput,\n    label: translate('ra.auth.password'),\n    type: \"password\",\n    disabled: isLoading\n  }))), React.createElement(CardActions, null, React.createElement(Button, {\n    variant: \"raised\",\n    type: \"submit\",\n    color: \"primary\",\n    disabled: isLoading,\n    className: classes.button\n  }, isLoading && React.createElement(CircularProgress, {\n    size: 25,\n    thickness: 2\n  }), translate('ra.auth.sign_in'))));\n};\n\nLoginForm.propTypes = __assign({}, propTypes, {\n  classes: PropTypes.object,\n  redirectTo: PropTypes.string\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: state.admin.loading > 0\n  };\n};\n\nvar enhance = compose(withStyles(styles), translate, connect(mapStateToProps), reduxForm({\n  form: 'signIn',\n  validate: function validate(values, props) {\n    var errors = {};\n    var translate = props.translate;\n    if (!values.username) errors.username = translate('ra.validation.required');\n    if (!values.password) errors.password = translate('ra.validation.required');\n    return errors;\n  }\n}));\nexport default enhance(LoginForm);","map":null,"metadata":{},"sourceType":"module"}