{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withWidth from '@material-ui/core/withWidth';\nexport var Responsive = function Responsive(_a) {\n  var xsmall = _a.xsmall,\n      small = _a.small,\n      medium = _a.medium,\n      large = _a.large,\n      width = _a.width,\n      rest = __rest(_a, [\"xsmall\", \"small\", \"medium\", \"large\", \"width\"]);\n\n  var element;\n\n  switch (width) {\n    case 'xs':\n      element = typeof xsmall !== 'undefined' ? xsmall : typeof small !== 'undefined' ? small : typeof medium !== 'undefined' ? medium : large;\n      break;\n\n    case 'sm':\n      element = typeof small !== 'undefined' ? small : typeof medium !== 'undefined' ? medium : large;\n      break;\n\n    case 'md':\n      element = typeof medium !== 'undefined' ? medium : typeof large !== 'undefined' ? large : small;\n      break;\n\n    case 'lg':\n    case 'xl':\n      element = typeof large !== 'undefined' ? large : typeof medium !== 'undefined' ? medium : small;\n      break;\n\n    default:\n      throw new Error(\"Unknown width \" + width);\n  }\n\n  return element ? React.cloneElement(element, rest) : null;\n};\nResponsive.propTypes = {\n  xsmall: PropTypes.element,\n  small: PropTypes.element,\n  medium: PropTypes.element,\n  large: PropTypes.element,\n  width: PropTypes.string\n};\nexport default withWidth()(Responsive);","map":null,"metadata":{},"sourceType":"module"}