{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport shouldUpdate from 'recompose/shouldUpdate';\nimport Queue from '@material-ui/icons/Queue';\nimport { Link } from 'react-router-dom';\nimport Button from './Button';\n\nvar omitId = function omitId(_a) {\n  var id = _a.id,\n      rest = __rest(_a, [\"id\"]);\n\n  return rest;\n};\n\nvar sanitizeRestProps = function sanitizeRestProps(_a) {\n  var // the next 6 props are injected by Toolbar\n  handleSubmit = _a.handleSubmit,\n      handleSubmitWithRedirect = _a.handleSubmitWithRedirect,\n      invalid = _a.invalid,\n      pristine = _a.pristine,\n      saving = _a.saving,\n      submitOnEnter = _a.submitOnEnter,\n      rest = __rest(_a, [\"handleSubmit\", \"handleSubmitWithRedirect\", \"invalid\", \"pristine\", \"saving\", \"submitOnEnter\"]);\n\n  return rest;\n};\n\nexport var CloneButton = function CloneButton(_a) {\n  var _b = _a.basePath,\n      basePath = _b === void 0 ? '' : _b,\n      _c = _a.label,\n      label = _c === void 0 ? 'ra.action.clone' : _c,\n      _d = _a.record,\n      record = _d === void 0 ? {} : _d,\n      _e = _a.icon,\n      icon = _e === void 0 ? React.createElement(Queue, null) : _e,\n      rest = __rest(_a, [\"basePath\", \"label\", \"record\", \"icon\"]);\n\n  return React.createElement(Button, __assign({\n    component: Link,\n    to: {\n      pathname: basePath + \"/create\",\n      state: {\n        record: omitId(record)\n      }\n    },\n    label: label\n  }, sanitizeRestProps(rest)), icon);\n};\nCloneButton.propTypes = {\n  basePath: PropTypes.string,\n  className: PropTypes.string,\n  classes: PropTypes.object,\n  label: PropTypes.string,\n  record: PropTypes.object,\n  icon: PropTypes.element\n};\nvar enhance = shouldUpdate(function (props, nextProps) {\n  return props.translate !== nextProps.translate || props.record && nextProps.record && props.record !== nextProps.record || props.basePath !== nextProps.basePath || props.record == null && nextProps.record != null;\n});\nexport default enhance(CloneButton);","map":null,"metadata":{},"sourceType":"module"}