{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport Avatar from '@material-ui/core/Avatar';\nimport { MuiThemeProvider, createMuiTheme, withStyles, createStyles } from '@material-ui/core/styles';\nimport LockIcon from '@material-ui/icons/Lock';\nimport defaultTheme from '../defaultTheme';\nimport Notification from '../layout/Notification';\nimport DefaultLoginForm from './LoginForm';\n\nvar styles = function styles(theme) {\n  return createStyles({\n    main: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '100vh',\n      height: '1px',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover'\n    },\n    card: {\n      minWidth: 300,\n      marginTop: '6em'\n    },\n    avatar: {\n      margin: '1em',\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    icon: {\n      backgroundColor: theme.palette.secondary[500]\n    }\n  });\n};\n\nvar sanitizeRestProps = function sanitizeRestProps(_a) {\n  var array = _a.array,\n      backgroundImage = _a.backgroundImage,\n      classes = _a.classes,\n      className = _a.className,\n      location = _a.location,\n      staticContext = _a.staticContext,\n      theme = _a.theme,\n      title = _a.title,\n      rest = __rest(_a, [\"array\", \"backgroundImage\", \"classes\", \"className\", \"location\", \"staticContext\", \"theme\", \"title\"]);\n\n  return rest;\n};\n/**\n * A standalone login page, to serve as authentication gate to the admin\n *\n * Expects the user to enter a login and a password, which will be checked\n * by the `authProvider` using the AUTH_LOGIN verb. Redirects to the root page\n * (/) upon success, otherwise displays an authentication error message.\n *\n * Copy and adapt this component to implement your own login logic\n * (e.g. to authenticate via email or facebook or anything else).\n *\n * @example\n *     import MyLoginPage from './MyLoginPage';\n *     const App = () => (\n *         <Admin loginPage={MyLoginPage} authProvider={authProvider}>\n *             ...\n *        </Admin>\n *     );\n */\n\n\nvar Login =\n/** @class */\nfunction (_super) {\n  __extends(Login, _super);\n\n  function Login(props) {\n    var _this = _super.call(this, props) || this; // Even though the React doc ensure the ref creation is done before the\n    // componentDidMount, it can happen that the ref is set to null until the\n    // next render.\n    // So, to handle this case the component will now try to load the image on\n    // the componentDidMount, but if the ref doesn't exist, it will try again\n    // on the following componentDidUpdate. The try will be done only once.\n    // @see https://reactjs.org/docs/refs-and-the-dom.html#adding-a-ref-to-a-dom-element\n\n\n    _this.updateBackgroundImage = function (lastTry) {\n      if (lastTry === void 0) {\n        lastTry = false;\n      }\n\n      if (!_this.backgroundImageLoaded && _this.containerRef.current) {\n        var backgroundImage = _this.props.backgroundImage;\n        _this.containerRef.current.style.backgroundImage = \"url(\" + backgroundImage + \")\";\n        _this.backgroundImageLoaded = true;\n      }\n\n      if (lastTry) {\n        _this.backgroundImageLoaded = true;\n      }\n    };\n\n    _this.theme = createMuiTheme(props.theme);\n    _this.containerRef = React.createRef();\n    _this.backgroundImageLoaded = false;\n    return _this;\n  } // Load background image asynchronously to speed up time to interactive\n\n\n  Login.prototype.lazyLoadBackgroundImage = function () {\n    var backgroundImage = this.props.backgroundImage;\n\n    if (backgroundImage) {\n      var img = new Image();\n      img.onload = this.updateBackgroundImage;\n      img.src = backgroundImage;\n    }\n  };\n\n  Login.prototype.componentDidMount = function () {\n    this.lazyLoadBackgroundImage();\n  };\n\n  Login.prototype.componentDidUpdate = function () {\n    if (!this.backgroundImageLoaded) {\n      this.lazyLoadBackgroundImage(true);\n    }\n  };\n\n  Login.prototype.render = function () {\n    var _a = this.props,\n        classes = _a.classes,\n        className = _a.className,\n        loginForm = _a.loginForm,\n        rest = __rest(_a, [\"classes\", \"className\", \"loginForm\"]);\n\n    return React.createElement(MuiThemeProvider, {\n      theme: this.theme\n    }, React.createElement(\"div\", __assign({\n      className: classnames(classes.main, className)\n    }, sanitizeRestProps(rest), {\n      ref: this.containerRef\n    }), React.createElement(Card, {\n      className: classes.card\n    }, React.createElement(\"div\", {\n      className: classes.avatar\n    }, React.createElement(Avatar, {\n      className: classes.icon\n    }, React.createElement(LockIcon, null))), loginForm), React.createElement(Notification, null)));\n  };\n\n  return Login;\n}(Component);\n\nLogin.propTypes = {\n  authProvider: PropTypes.func,\n  backgroundImage: PropTypes.string,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  input: PropTypes.object,\n  loginForm: PropTypes.element,\n  meta: PropTypes.object,\n  previousRoute: PropTypes.string\n};\nLogin.defaultProps = {\n  backgroundImage: 'https://source.unsplash.com/random/1600x900/daily',\n  theme: defaultTheme,\n  loginForm: React.createElement(DefaultLoginForm, null)\n};\nexport default withStyles(styles)(Login);","map":null,"metadata":{},"sourceType":"module"}