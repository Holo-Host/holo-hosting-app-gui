{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport sanitizeRestProps from './sanitizeRestProps';\nvar styles = {\n  root: {\n    display: 'inline-block'\n  }\n};\nexport var FileField = function FileField(_a) {\n  var _b = _a.classes,\n      classes = _b === void 0 ? {} : _b,\n      className = _a.className,\n      record = _a.record,\n      source = _a.source,\n      title = _a.title,\n      src = _a.src,\n      target = _a.target,\n      rest = __rest(_a, [\"classes\", \"className\", \"record\", \"source\", \"title\", \"src\", \"target\"]);\n\n  var sourceValue = get(record, source);\n\n  if (!sourceValue) {\n    return React.createElement(\"div\", __assign({\n      className: classnames(classes.root, className)\n    }, sanitizeRestProps(rest)));\n  }\n\n  if (Array.isArray(sourceValue)) {\n    return React.createElement(\"ul\", __assign({\n      className: classnames(classes.root, className)\n    }, sanitizeRestProps(rest)), sourceValue.map(function (file, index) {\n      var titleValue = get(file, title) || title;\n      var srcValue = get(file, src) || title;\n      return React.createElement(\"li\", {\n        key: index\n      }, React.createElement(\"a\", {\n        href: srcValue,\n        title: titleValue,\n        target: target\n      }, titleValue));\n    }));\n  }\n\n  var titleValue = get(record, title) || title;\n  return React.createElement(\"div\", __assign({\n    className: classnames(classes.root, className)\n  }, sanitizeRestProps(rest)), React.createElement(\"a\", {\n    href: sourceValue,\n    title: titleValue,\n    target: target\n  }, titleValue));\n};\nFileField.propTypes = {\n  addLabel: PropTypes.bool,\n  basePath: PropTypes.string,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  cellClassName: PropTypes.string,\n  headerClassName: PropTypes.string,\n  record: PropTypes.object,\n  sortBy: PropTypes.string,\n  source: PropTypes.string.isRequired,\n  src: PropTypes.string,\n  title: PropTypes.string,\n  target: PropTypes.string\n};\nexport default withStyles(styles)(FileField);","map":null,"metadata":{},"sourceType":"module"}