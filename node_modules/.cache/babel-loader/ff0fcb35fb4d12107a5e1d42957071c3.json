{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Children, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport getContext from 'recompose/getContext';\nimport { userCheck as userCheckAction } from '../actions/authActions';\nimport { AUTH_GET_PERMISSIONS } from './types';\nimport { isLoggedIn as getIsLoggedIn } from '../reducer';\nimport warning from '../util/warning';\n\nvar isEmptyChildren = function isEmptyChildren(children) {\n  return Children.count(children) === 0;\n};\n/**\n * After checking that the user is authenticated,\n * retrieves the user's permissions for a specific context.\n *\n * Useful for Route components ; used internally by Resource.\n * Use it to decorate your custom page components to require\n * a custom role. It will pass the permissions as a prop to your\n * component.\n *\n * Pass the `location` from the `routeParams` as `location` prop.\n * You can set additional `authParams` at will if your authProvider\n * requires it.\n *\n * @example\n *     import { WithPermissions } from 'react-admin';\n *\n *     const Foo = ({ permissions }) => (\n *         {permissions === 'admin' ? <p>Sensitive data</p> : null}\n *         <p>Not sensitive data</p>\n *     );\n *\n *     const customRoutes = [\n *         <Route path=\"/foo\" render={routeParams =>\n *             <WithPermissions location={routeParams.location} authParams={{ foo: 'bar' }}>\n *                 <Foo />\n *             </WithPermissions>\n *         } />\n *     ];\n *     const App = () => (\n *         <Admin customRoutes={customRoutes}>\n *             ...\n *         </Admin>\n *     );\n */\n\n\nvar WithPermissions =\n/** @class */\nfunction (_super) {\n  __extends(WithPermissions, _super);\n\n  function WithPermissions() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.cancelled = false;\n    _this.state = {\n      permissions: null\n    };\n    return _this;\n  }\n\n  WithPermissions.prototype.componentWillMount = function () {\n    warning(this.props.render && this.props.children && !isEmptyChildren(this.props.children), 'You should not use both <WithPermissions render> and <WithPermissions children>; <WithPermissions children> will be ignored');\n    this.checkAuthentication(this.props);\n  };\n\n  WithPermissions.prototype.componentDidMount = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.checkPermissions(this.props)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  WithPermissions.prototype.componentWillUnmount = function () {\n    this.cancelled = true;\n  };\n\n  WithPermissions.prototype.componentWillReceiveProps = function (nextProps) {\n    if (nextProps.location !== this.props.location || nextProps.authParams !== this.props.authParams || nextProps.isLoggedIn !== this.props.isLoggedIn) {\n      this.checkAuthentication(nextProps);\n      this.checkPermissions(this.props);\n    }\n  };\n\n  WithPermissions.prototype.checkAuthentication = function (params) {\n    var userCheck = params.userCheck,\n        authParams = params.authParams,\n        location = params.location;\n    userCheck(authParams, location && location.pathname);\n  };\n\n  WithPermissions.prototype.checkPermissions = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var authProvider, authParams, location, match, permissions, error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            authProvider = params.authProvider, authParams = params.authParams, location = params.location, match = params.match;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , authProvider(AUTH_GET_PERMISSIONS, __assign({}, authParams, {\n              routeParams: match ? match.params : undefined,\n              location: location ? location.pathname : undefined\n            }))];\n\n          case 2:\n            permissions = _a.sent();\n\n            if (!this.cancelled) {\n              this.setState({\n                permissions: permissions\n              });\n            }\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_1 = _a.sent();\n\n            if (!this.cancelled) {\n              this.setState({\n                permissions: null\n              });\n            }\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }; // render even though the AUTH_GET_PERMISSIONS\n  // isn't finished (optimistic rendering)\n\n\n  WithPermissions.prototype.render = function () {\n    var _a = this.props,\n        authProvider = _a.authProvider,\n        userCheck = _a.userCheck,\n        isLoggedIn = _a.isLoggedIn,\n        render = _a.render,\n        children = _a.children,\n        staticContext = _a.staticContext,\n        props = __rest(_a, [\"authProvider\", \"userCheck\", \"isLoggedIn\", \"render\", \"children\", \"staticContext\"]);\n\n    var permissions = this.state.permissions;\n\n    if (render) {\n      return render(__assign({\n        permissions: permissions\n      }, props));\n    }\n\n    if (children) {\n      return children(__assign({\n        permissions: permissions\n      }, props));\n    }\n  };\n\n  return WithPermissions;\n}(Component);\n\nexport { WithPermissions };\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoggedIn: getIsLoggedIn(state)\n  };\n};\n\nvar EnhancedWithPermissions = compose(getContext({\n  authProvider: PropTypes.func\n}), connect(mapStateToProps, {\n  userCheck: userCheckAction\n}))(WithPermissions);\nexport default EnhancedWithPermissions;","map":null,"metadata":{},"sourceType":"module"}