{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport React, { Children, Component, cloneElement, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport compose from 'recompose/compose';\nimport getContext from 'recompose/getContext';\nimport { AUTH_GET_PERMISSIONS } from './auth/types';\nimport { isLoggedIn } from './reducer';\nimport { userLogout as userLogoutAction } from './actions/authActions';\nimport RoutesWithLayout from './RoutesWithLayout';\nvar welcomeStyles = {\n  width: '50%',\n  margin: '40vh',\n  textAlign: 'center'\n};\n\nvar CoreAdminRouter =\n/** @class */\nfunction (_super) {\n  __extends(CoreAdminRouter, _super);\n\n  function CoreAdminRouter() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      children: []\n    };\n\n    _this.initializeResources = function (nextProps) {\n      if (typeof nextProps.children === 'function') {\n        _this.initializeResourcesAsync(nextProps);\n      }\n    };\n\n    _this.initializeResourcesAsync = function (props) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var authProvider, permissions, resolveChildren, childrenFuncResult, error_1;\n\n        var _this = this;\n\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              authProvider = props.authProvider;\n              _a.label = 1;\n\n            case 1:\n              _a.trys.push([1, 3,, 4]);\n\n              return [4\n              /*yield*/\n              , authProvider(AUTH_GET_PERMISSIONS)];\n\n            case 2:\n              permissions = _a.sent();\n              resolveChildren = props.children;\n              childrenFuncResult = resolveChildren(permissions);\n\n              if (childrenFuncResult.then) {\n                childrenFuncResult.then(function (resolvedChildren) {\n                  _this.setState({\n                    children: resolvedChildren.filter(function (child) {\n                      return child;\n                    }).map(function (child) {\n                      return __assign({}, child, {\n                        props: __assign({}, child.props, {\n                          key: child.props.name\n                        })\n                      });\n                    })\n                  });\n                });\n              } else {\n                this.setState({\n                  children: childrenFuncResult.filter(function (child) {\n                    return child;\n                  })\n                });\n              }\n\n              return [3\n              /*break*/\n              , 4];\n\n            case 3:\n              error_1 = _a.sent();\n              this.props.userLogout();\n              return [3\n              /*break*/\n              , 4];\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    _this.renderCustomRoutesWithoutLayout = function (route, props) {\n      if (route.props.render) {\n        return route.props.render(__assign({}, props, {\n          title: _this.props.title\n        }));\n      }\n\n      if (route.props.component) {\n        return createElement(route.props.component, __assign({}, props, {\n          title: _this.props.title\n        }));\n      }\n    };\n\n    return _this;\n  }\n\n  CoreAdminRouter.prototype.componentWillMount = function () {\n    this.initializeResources(this.props);\n  };\n\n  CoreAdminRouter.prototype.componentWillReceiveProps = function (nextProps) {\n    var _this = this;\n\n    if (nextProps.isLoggedIn !== this.props.isLoggedIn) {\n      this.setState({\n        children: []\n      }, function () {\n        return _this.initializeResources(nextProps);\n      });\n    }\n  };\n\n  CoreAdminRouter.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        appLayout = _a.appLayout,\n        catchAll = _a.catchAll,\n        children = _a.children,\n        customRoutes = _a.customRoutes,\n        dashboard = _a.dashboard,\n        loading = _a.loading,\n        logout = _a.logout,\n        menu = _a.menu,\n        theme = _a.theme,\n        title = _a.title;\n\n    if (process.env.NODE_ENV !== 'production' && typeof children !== 'function' && !children) {\n      return React.createElement(\"div\", {\n        style: welcomeStyles\n      }, \"React-admin is properly configured.\", React.createElement(\"br\", null), \"Now you can add a first <Resource> as child of <Admin>.\");\n    }\n\n    if (typeof children === 'function' && (!this.state.children || this.state.children.length === 0)) {\n      return React.createElement(Route, {\n        path: \"/\",\n        key: \"loading\",\n        component: loading\n      });\n    }\n\n    var childrenToRender = typeof children === 'function' ? this.state.children : children;\n    return React.createElement(\"div\", null, // as we need all of them and not just the one rendered\n    Children.map(childrenToRender, function (child) {\n      return cloneElement(child, {\n        key: child.props.name,\n        // The context prop instructs the Resource component to not render anything\n        // but simply to register itself as a known resource\n        context: 'registration'\n      });\n    }), React.createElement(Switch, null, customRoutes.filter(function (route) {\n      return route.props.noLayout;\n    }).map(function (route, key) {\n      return cloneElement(route, {\n        key: key,\n        render: function render(props) {\n          return _this.renderCustomRoutesWithoutLayout(route, props);\n        }\n      });\n    }), React.createElement(Route, {\n      path: \"/\",\n      render: function render() {\n        return createElement(appLayout, {\n          dashboard: dashboard,\n          logout: logout,\n          menu: menu,\n          theme: theme,\n          title: title\n        }, React.createElement(RoutesWithLayout, {\n          catchAll: catchAll,\n          customRoutes: customRoutes.filter(function (route) {\n            return !route.props.noLayout;\n          }),\n          dashboard: dashboard,\n          title: title\n        }, Children.map(childrenToRender, function (child) {\n          return cloneElement(child, {\n            key: child.props.name,\n            context: 'route'\n          });\n        })));\n      }\n    })));\n  };\n\n  CoreAdminRouter.defaultProps = {\n    customRoutes: []\n  };\n  return CoreAdminRouter;\n}(Component);\n\nexport { CoreAdminRouter };\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoggedIn: isLoggedIn(state)\n  };\n};\n\nexport default compose(getContext({\n  authProvider: PropTypes.func\n}), connect(mapStateToProps, {\n  userLogout: userLogoutAction\n}))(CoreAdminRouter);","map":null,"metadata":{},"sourceType":"module"}