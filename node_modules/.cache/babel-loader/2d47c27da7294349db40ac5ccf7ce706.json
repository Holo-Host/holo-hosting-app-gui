{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { Children, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport MuiToolbar from '@material-ui/core/Toolbar';\nimport withWidth from '@material-ui/core/withWidth';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport { SaveButton, DeleteButton } from '../button';\n\nvar styles = function styles(theme) {\n  var _a;\n\n  return {\n    toolbar: {\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[100] : theme.palette.grey[900]\n    },\n    desktopToolbar: {\n      marginTop: theme.spacing.unit * 2\n    },\n    mobileToolbar: {\n      position: 'fixed',\n      bottom: 0,\n      left: 0,\n      right: 0,\n      padding: '16px',\n      width: '100%',\n      boxSizing: 'border-box',\n      flexShrink: 0,\n      zIndex: 2\n    },\n    defaultToolbar: {\n      flex: 1,\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    spacer: (_a = {}, _a[theme.breakpoints.down('xs')] = {\n      height: '5em'\n    }, _a)\n  };\n};\n\nvar valueOrDefault = function valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n};\n\nvar Toolbar = function Toolbar(_a) {\n  var basePath = _a.basePath,\n      children = _a.children,\n      classes = _a.classes,\n      className = _a.className,\n      handleSubmit = _a.handleSubmit,\n      handleSubmitWithRedirect = _a.handleSubmitWithRedirect,\n      invalid = _a.invalid,\n      pristine = _a.pristine,\n      record = _a.record,\n      redirect = _a.redirect,\n      resource = _a.resource,\n      saving = _a.saving,\n      submitOnEnter = _a.submitOnEnter,\n      width = _a.width,\n      rest = __rest(_a, [\"basePath\", \"children\", \"classes\", \"className\", \"handleSubmit\", \"handleSubmitWithRedirect\", \"invalid\", \"pristine\", \"record\", \"redirect\", \"resource\", \"saving\", \"submitOnEnter\", \"width\"]);\n\n  var _b;\n\n  return React.createElement(Fragment, null, React.createElement(MuiToolbar, __assign({\n    className: classnames(classes.toolbar, (_b = {}, _b[classes.mobileToolbar] = width === 'xs', _b[classes.desktopToolbar] = width !== 'xs', _b), className),\n    role: \"toolbar\"\n  }, rest), Children.count(children) === 0 ? React.createElement(\"div\", {\n    className: classes.defaultToolbar\n  }, React.createElement(SaveButton, {\n    handleSubmitWithRedirect: handleSubmitWithRedirect,\n    invalid: invalid,\n    redirect: redirect,\n    saving: saving,\n    submitOnEnter: submitOnEnter\n  }), record && typeof record.id !== 'undefined' && React.createElement(DeleteButton, {\n    basePath: basePath,\n    record: record,\n    resource: resource\n  })) : Children.map(children, function (button) {\n    return button ? React.cloneElement(button, {\n      basePath: basePath,\n      handleSubmit: valueOrDefault(button.props.handleSubmit, handleSubmit),\n      handleSubmitWithRedirect: valueOrDefault(button.props.handleSubmitWithRedirect, handleSubmitWithRedirect),\n      invalid: invalid,\n      pristine: pristine,\n      saving: saving,\n      submitOnEnter: valueOrDefault(button.props.submitOnEnter, submitOnEnter)\n    }) : null;\n  })), React.createElement(\"div\", {\n    className: classes.spacer\n  }));\n};\n\nToolbar.propTypes = {\n  basePath: PropTypes.string,\n  children: PropTypes.node,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  handleSubmit: PropTypes.func,\n  handleSubmitWithRedirect: PropTypes.func,\n  invalid: PropTypes.bool,\n  pristine: PropTypes.bool,\n  record: PropTypes.object,\n  redirect: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n  resource: PropTypes.string,\n  saving: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  submitOnEnter: PropTypes.bool,\n  width: PropTypes.string\n};\nToolbar.defaultProps = {\n  submitOnEnter: true\n};\nvar enhance = compose(withWidth(), withStyles(styles));\nexport default enhance(Toolbar);","map":null,"metadata":{},"sourceType":"module"}