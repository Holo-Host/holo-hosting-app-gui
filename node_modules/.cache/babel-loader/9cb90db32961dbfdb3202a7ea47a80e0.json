{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport { routerReducer } from 'react-router-redux';\nimport admin, { getResources as adminGetResources, getReferenceResource as adminGetReferenceResource, getPossibleReferenceValues as adminGetPossibleReferenceValues, isLoggedIn as adminIsLoggedIn } from './admin';\nexport { getNotification } from './admin/notifications';\nimport i18nReducer, { getLocale as adminGetLocale } from './i18n';\nexport default (function (customReducers, locale, messages) {\n  return combineReducers(__assign({\n    admin: admin,\n    i18n: i18nReducer(locale, messages),\n    form: formReducer,\n    router: routerReducer\n  }, customReducers));\n});\nexport var getPossibleReferenceValues = function getPossibleReferenceValues(state, props) {\n  return adminGetPossibleReferenceValues(state.admin, props);\n};\nexport var getResources = function getResources(state) {\n  return adminGetResources(state.admin);\n};\nexport var getReferenceResource = function getReferenceResource(state, props) {\n  return adminGetReferenceResource(state.admin, props);\n};\nexport var isLoggedIn = function isLoggedIn(state) {\n  return adminIsLoggedIn(state.admin);\n};\nexport var getLocale = function getLocale(state) {\n  return adminGetLocale(state.i18n);\n};\nexport { getPossibleReferences } from './admin';","map":null,"metadata":{},"sourceType":"module"}