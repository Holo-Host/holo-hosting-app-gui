{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport shouldUpdate from 'recompose/shouldUpdate';\nimport TableBody from '@material-ui/core/TableBody';\nimport classnames from 'classnames';\nimport DatagridRow from './DatagridRow';\n\nvar DatagridBody = function DatagridBody(_a) {\n  var basePath = _a.basePath,\n      children = _a.children,\n      classes = _a.classes,\n      className = _a.className,\n      data = _a.data,\n      expand = _a.expand,\n      hasBulkActions = _a.hasBulkActions,\n      hover = _a.hover,\n      ids = _a.ids,\n      isLoading = _a.isLoading,\n      onToggleItem = _a.onToggleItem,\n      resource = _a.resource,\n      row = _a.row,\n      rowClick = _a.rowClick,\n      rowStyle = _a.rowStyle,\n      selectedIds = _a.selectedIds,\n      styles = _a.styles,\n      version = _a.version,\n      rest = __rest(_a, [\"basePath\", \"children\", \"classes\", \"className\", \"data\", \"expand\", \"hasBulkActions\", \"hover\", \"ids\", \"isLoading\", \"onToggleItem\", \"resource\", \"row\", \"rowClick\", \"rowStyle\", \"selectedIds\", \"styles\", \"version\"]);\n\n  return React.createElement(TableBody, __assign({\n    className: classnames('datagrid-body', className)\n  }, rest), ids.map(function (id, rowIndex) {\n    var _a;\n\n    return React.cloneElement(row, {\n      basePath: basePath,\n      classes: classes,\n      className: classnames(classes.row, (_a = {}, _a[classes.rowEven] = rowIndex % 2 === 0, _a[classes.rowOdd] = rowIndex % 2 !== 0, _a[classes.clickableRow] = rowClick, _a)),\n      expand: expand,\n      hasBulkActions: hasBulkActions,\n      hover: hover,\n      id: id,\n      key: id,\n      onToggleItem: onToggleItem,\n      record: data[id],\n      resource: resource,\n      rowClick: rowClick,\n      selected: selectedIds.includes(id),\n      style: rowStyle ? rowStyle(data[id], rowIndex) : null\n    }, children);\n  }));\n};\n\nDatagridBody.propTypes = {\n  basePath: PropTypes.string,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  data: PropTypes.object.isRequired,\n  expand: PropTypes.node,\n  hasBulkActions: PropTypes.bool.isRequired,\n  hover: PropTypes.bool,\n  ids: PropTypes.arrayOf(PropTypes.any).isRequired,\n  isLoading: PropTypes.bool,\n  onToggleItem: PropTypes.func,\n  resource: PropTypes.string,\n  row: PropTypes.element.isRequired,\n  rowClick: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  rowStyle: PropTypes.func,\n  selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n  styles: PropTypes.object,\n  version: PropTypes.number\n};\nDatagridBody.defaultProps = {\n  data: {},\n  hasBulkActions: false,\n  ids: [],\n  row: React.createElement(DatagridRow, null)\n};\n\nvar areArraysEqual = function areArraysEqual(arr1, arr2) {\n  return arr1.length == arr2.length && arr1.every(function (v, i) {\n    return v === arr2[i];\n  });\n};\n\nvar PureDatagridBody = shouldUpdate(function (props, nextProps) {\n  return props.version !== nextProps.version || nextProps.isLoading === false || !areArraysEqual(props.ids, nextProps.ids) || props.data !== nextProps.data;\n})(DatagridBody); // trick material-ui Table into thinking this is one of the child type it supports\n// @ts-ignore\n\nPureDatagridBody.muiName = 'TableBody';\nexport default PureDatagridBody;","map":null,"metadata":{},"sourceType":"module"}