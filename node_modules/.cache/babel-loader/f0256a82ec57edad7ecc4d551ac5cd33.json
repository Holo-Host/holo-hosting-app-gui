{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field } from 'redux-form';\nimport IconButton from '@material-ui/core/IconButton';\nimport ActionHide from '@material-ui/icons/HighlightOff';\nimport classnames from 'classnames';\nimport { translate } from 'ra-core';\nvar emptyRecord = {};\n\nvar sanitizeRestProps = function sanitizeRestProps(_a) {\n  var alwaysOn = _a.alwaysOn,\n      props = __rest(_a, [\"alwaysOn\"]);\n\n  return props;\n};\n\nvar FilterFormInput = function FilterFormInput(_a) {\n  var filterElement = _a.filterElement,\n      handleHide = _a.handleHide,\n      classes = _a.classes,\n      resource = _a.resource,\n      translate = _a.translate;\n  return React.createElement(\"div\", {\n    \"data-source\": filterElement.props.source,\n    className: classnames('filter-field', classes.body)\n  }, !filterElement.props.alwaysOn && React.createElement(IconButton, {\n    className: \"hide-filter\",\n    onClick: handleHide,\n    \"data-key\": filterElement.props.source,\n    tooltip: translate('ra.action.remove_filter')\n  }, React.createElement(ActionHide, null)), React.createElement(Field, __assign({\n    allowEmpty: true\n  }, sanitizeRestProps(filterElement.props), {\n    name: filterElement.props.source,\n    component: filterElement.type,\n    resource: resource,\n    record: emptyRecord\n  })), React.createElement(\"div\", {\n    className: classes.spacer\n  }, \"\\xA0\"));\n};\n\nFilterFormInput.propTypes = {\n  filterElement: PropTypes.node,\n  handleHide: PropTypes.func,\n  classes: PropTypes.object,\n  resource: PropTypes.string,\n  translate: PropTypes.func\n};\nexport default translate(FilterFormInput);","map":null,"metadata":{},"sourceType":"module"}