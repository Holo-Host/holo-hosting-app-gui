{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Component, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { initializeForm as initializeFormAction } from '../actions/formActions';\n\nvar DefaultValueView =\n/** @class */\nfunction (_super) {\n  __extends(DefaultValueView, _super);\n\n  function DefaultValueView() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DefaultValueView.prototype.componentDidMount = function () {\n    var _a;\n\n    var _b = this.props,\n        defaultValue = _b.defaultValue,\n        input = _b.input,\n        initializeForm = _b.initializeForm,\n        source = _b.source;\n\n    if (typeof defaultValue === 'undefined' || input) {\n      return;\n    }\n\n    initializeForm((_a = {}, _a[source] = typeof defaultValue === 'function' ? defaultValue() : defaultValue, _a));\n  };\n\n  DefaultValueView.prototype.componentDidUpdate = function (prevProps) {\n    var _a;\n\n    var _b = this.props,\n        defaultValue = _b.defaultValue,\n        input = _b.input,\n        initializeForm = _b.initializeForm,\n        source = _b.source;\n\n    if (typeof defaultValue === 'undefined' || input) {\n      return;\n    }\n\n    if (defaultValue !== prevProps.defaultValue) {\n      initializeForm((_a = {}, _a[source] = typeof defaultValue === 'function' ? defaultValue() : defaultValue, _a));\n    }\n  };\n\n  DefaultValueView.prototype.render = function () {\n    var _a = this.props,\n        initializeForm = _a.initializeForm,\n        decoratedComponent = _a.decoratedComponent,\n        props = __rest(_a, [\"initializeForm\", \"decoratedComponent\"]);\n\n    return createElement(decoratedComponent, props);\n  };\n\n  DefaultValueView.propTypes = {\n    decoratedComponent: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n    defaultValue: PropTypes.any,\n    initializeForm: PropTypes.func.isRequired,\n    input: PropTypes.object,\n    source: PropTypes.string,\n    validate: PropTypes.oneOfType([PropTypes.func, PropTypes.array])\n  };\n  return DefaultValueView;\n}(Component);\n\nexport { DefaultValueView };\n\nvar DefaultValue = function DefaultValue(DecoratedComponent) {\n  return connect(function () {\n    return {\n      decoratedComponent: DecoratedComponent\n    };\n  }, {\n    initializeForm: initializeFormAction\n  })(DefaultValueView);\n};\n\nexport default DefaultValue;","map":null,"metadata":{},"sourceType":"module"}