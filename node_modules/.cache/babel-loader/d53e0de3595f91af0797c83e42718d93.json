{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport pure from 'recompose/pure';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport compose from 'recompose/compose';\nimport { translate, sanitizeListRestProps } from 'ra-core';\nimport PaginationActions from './PaginationActions';\nimport PaginationLimit from './PaginationLimit';\nimport Responsive from '../layout/Responsive';\nvar emptyArray = [];\n\nvar Pagination =\n/** @class */\nfunction (_super) {\n  __extends(Pagination, _super);\n\n  function Pagination() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.getNbPages = function () {\n      return Math.ceil(_this.props.total / _this.props.perPage) || 1;\n    };\n    /**\n     * Warning: material-ui's page is 0-based\n     */\n\n\n    _this.handlePageChange = function (event, page) {\n      event && event.stopPropagation();\n\n      if (page < 0 || page > _this.getNbPages() - 1) {\n        throw new Error(_this.props.translate('ra.navigation.page_out_of_boundaries', {\n          page: page + 1\n        }));\n      }\n\n      _this.props.setPage(page + 1);\n    };\n\n    _this.handlePerPageChange = function (event) {\n      _this.props.setPerPage(event.target.value);\n    };\n\n    _this.labelDisplayedRows = function (_a) {\n      var from = _a.from,\n          to = _a.to,\n          count = _a.count;\n      var translate = _this.props.translate;\n      return translate('ra.navigation.page_range_info', {\n        offsetBegin: from,\n        offsetEnd: to,\n        total: count\n      });\n    };\n\n    return _this;\n  }\n\n  Pagination.prototype.componentDidUpdate = function () {\n    if (this.props.page < 1 || isNaN(this.props.page)) {\n      this.props.setPage(1);\n    }\n  };\n\n  Pagination.prototype.render = function () {\n    var _a = this.props,\n        isLoading = _a.isLoading,\n        page = _a.page,\n        perPage = _a.perPage,\n        rowsPerPageOptions = _a.rowsPerPageOptions,\n        total = _a.total,\n        translate = _a.translate,\n        rest = __rest(_a, [\"isLoading\", \"page\", \"perPage\", \"rowsPerPageOptions\", \"total\", \"translate\"]);\n\n    if (!isLoading && total === 0) {\n      return React.createElement(PaginationLimit, null);\n    }\n\n    return React.createElement(Responsive, {\n      small: React.createElement(TablePagination, __assign({\n        count: total,\n        rowsPerPage: perPage,\n        page: page - 1,\n        onChangePage: this.handlePageChange,\n        rowsPerPageOptions: emptyArray,\n        component: \"span\",\n        labelDisplayedRows: this.labelDisplayedRows\n      }, sanitizeListRestProps(rest))),\n      medium: React.createElement(TablePagination, __assign({\n        count: total,\n        rowsPerPage: perPage,\n        page: page - 1,\n        onChangePage: this.handlePageChange,\n        onChangeRowsPerPage: this.handlePerPageChange,\n        ActionsComponent: PaginationActions,\n        component: \"span\",\n        labelRowsPerPage: translate('ra.navigation.page_rows_per_page'),\n        labelDisplayedRows: this.labelDisplayedRows,\n        rowsPerPageOptions: rowsPerPageOptions\n      }, sanitizeListRestProps(rest)))\n    });\n  };\n\n  return Pagination;\n}(Component);\n\nexport { Pagination };\nPagination.propTypes = {\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  ids: PropTypes.array,\n  isLoading: PropTypes.bool,\n  page: PropTypes.number,\n  perPage: PropTypes.number,\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\n  setPage: PropTypes.func,\n  setPerPage: PropTypes.func,\n  translate: PropTypes.func.isRequired,\n  total: PropTypes.number\n};\nPagination.defaultProps = {\n  rowsPerPageOptions: [5, 10, 25]\n};\nvar enhance = compose(pure, translate);\nexport default enhance(Pagination);","map":null,"metadata":{},"sourceType":"module"}