{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nexport var SET_SORT = 'SET_SORT';\nexport var SORT_ASC = 'ASC';\nexport var SORT_DESC = 'DESC';\nexport var SET_PAGE = 'SET_PAGE';\nexport var SET_PER_PAGE = 'SET_PER_PAGE';\nexport var SET_FILTER = 'SET_FILTER';\n\nvar oppositeOrder = function oppositeOrder(direction) {\n  return direction === SORT_DESC ? SORT_ASC : SORT_DESC;\n};\n/**\n * This reducer is for the react-router query string, NOT for redux.\n */\n\n\nvar queryReducer = function queryReducer(previousState, _a) {\n  var type = _a.type,\n      payload = _a.payload;\n\n  switch (type) {\n    case SET_SORT:\n      if (payload === previousState.sort) {\n        return __assign({}, previousState, {\n          order: oppositeOrder(previousState.order),\n          page: 1\n        });\n      }\n\n      return __assign({}, previousState, {\n        sort: payload,\n        order: SORT_ASC,\n        page: 1\n      });\n\n    case SET_PAGE:\n      return __assign({}, previousState, {\n        page: payload\n      });\n\n    case SET_PER_PAGE:\n      return __assign({}, previousState, {\n        perPage: payload\n      });\n\n    case SET_FILTER:\n      {\n        return __assign({}, previousState, {\n          page: 1,\n          filter: payload\n        });\n      }\n\n    default:\n      return previousState;\n  }\n};\n\nexport default queryReducer;","map":null,"metadata":{},"sourceType":"module"}