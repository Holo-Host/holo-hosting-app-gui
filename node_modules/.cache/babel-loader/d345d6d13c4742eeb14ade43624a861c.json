{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { linkToRecord, sanitizeListRestProps } from 'ra-core';\nvar styles = createStyles({\n  link: {\n    textDecoration: 'none',\n    color: 'inherit'\n  },\n  tertiary: {\n    float: 'right',\n    opacity: 0.541176\n  }\n});\nvar LinkOrNot = withStyles(styles)(function (_a) {\n  var classes = _a.classes,\n      linkType = _a.linkType,\n      basePath = _a.basePath,\n      id = _a.id,\n      children = _a.children;\n  return linkType === 'edit' || linkType === true ? React.createElement(Link, {\n    to: linkToRecord(basePath, id),\n    className: classes.link\n  }, children) : linkType === 'show' ? React.createElement(Link, {\n    to: linkToRecord(basePath, id) + \"/show\",\n    className: classes.link\n  }, children) : React.createElement(\"span\", null, children);\n});\n\nvar SimpleList = function SimpleList(_a) {\n  var basePath = _a.basePath,\n      _b = _a.classes,\n      classes = _b === void 0 ? {} : _b,\n      className = _a.className,\n      data = _a.data,\n      hasBulkActions = _a.hasBulkActions,\n      ids = _a.ids,\n      isLoading = _a.isLoading,\n      leftAvatar = _a.leftAvatar,\n      leftIcon = _a.leftIcon,\n      linkType = _a.linkType,\n      onToggleItem = _a.onToggleItem,\n      primaryText = _a.primaryText,\n      rightAvatar = _a.rightAvatar,\n      rightIcon = _a.rightIcon,\n      secondaryText = _a.secondaryText,\n      selectedIds = _a.selectedIds,\n      tertiaryText = _a.tertiaryText,\n      total = _a.total,\n      rest = __rest(_a, [\"basePath\", \"classes\", \"className\", \"data\", \"hasBulkActions\", \"ids\", \"isLoading\", \"leftAvatar\", \"leftIcon\", \"linkType\", \"onToggleItem\", \"primaryText\", \"rightAvatar\", \"rightIcon\", \"secondaryText\", \"selectedIds\", \"tertiaryText\", \"total\"]);\n\n  return (isLoading || total > 0) && React.createElement(List, __assign({\n    className: className\n  }, sanitizeListRestProps(rest)), ids.map(function (id) {\n    return React.createElement(LinkOrNot, {\n      linkType: linkType,\n      basePath: basePath,\n      id: id,\n      key: id\n    }, React.createElement(ListItem, {\n      button: true\n    }, leftIcon && React.createElement(ListItemIcon, null, leftIcon(data[id], id)), leftAvatar && React.createElement(ListItemAvatar, null, React.createElement(Avatar, null, leftAvatar(data[id], id))), React.createElement(ListItemText, {\n      primary: React.createElement(\"div\", null, primaryText(data[id], id), tertiaryText && React.createElement(\"span\", {\n        className: classes.tertiary\n      }, tertiaryText(data[id], id))),\n      secondary: secondaryText && secondaryText(data[id], id)\n    }), (rightAvatar || rightIcon) && React.createElement(ListItemSecondaryAction, null, rightAvatar && React.createElement(Avatar, null, rightAvatar(data[id], id)), rightIcon && React.createElement(ListItemIcon, null, rightIcon(data[id], id)))));\n  }));\n};\n\nSimpleList.propTypes = {\n  basePath: PropTypes.string,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  data: PropTypes.object,\n  hasBulkActions: PropTypes.bool.isRequired,\n  ids: PropTypes.array,\n  leftAvatar: PropTypes.func,\n  leftIcon: PropTypes.func,\n  linkType: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).isRequired,\n  onToggleItem: PropTypes.func,\n  primaryText: PropTypes.func,\n  rightAvatar: PropTypes.func,\n  rightIcon: PropTypes.func,\n  secondaryText: PropTypes.func,\n  selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n  tertiaryText: PropTypes.func\n};\nSimpleList.defaultProps = {\n  linkType: 'edit',\n  hasBulkActions: false,\n  selectedIds: []\n};\nexport default withStyles(styles)(SimpleList);","map":null,"metadata":{},"sourceType":"module"}