{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { addField, FieldTitle } from 'ra-core';\nimport sanitizeRestProps from './sanitizeRestProps';\n\nvar DisabledInput = function DisabledInput(_a) {\n  var classes = _a.classes,\n      className = _a.className,\n      record = _a.record,\n      value = _a.input.value,\n      label = _a.label,\n      resource = _a.resource,\n      source = _a.source,\n      options = _a.options,\n      rest = __rest(_a, [\"classes\", \"className\", \"record\", \"input\", \"label\", \"resource\", \"source\", \"options\"]);\n\n  return React.createElement(TextField, __assign({\n    disabled: true,\n    margin: \"normal\",\n    value: value,\n    label: React.createElement(FieldTitle, {\n      label: label,\n      source: source,\n      resource: resource\n    }),\n    className: className,\n    classes: classes\n  }, options, sanitizeRestProps(rest)));\n};\n\nDisabledInput.propTypes = {\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  label: PropTypes.string,\n  input: PropTypes.object,\n  options: PropTypes.object,\n  record: PropTypes.object,\n  resource: PropTypes.string,\n  source: PropTypes.string\n};\nexport default addField(DisabledInput);","map":null,"metadata":{},"sourceType":"module"}