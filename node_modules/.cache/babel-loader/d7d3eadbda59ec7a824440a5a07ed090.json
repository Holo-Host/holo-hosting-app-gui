{"ast":null,"code":"import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_CHECK, AUTH_ERROR } from 'react-admin';\nexport default (function (type, params) {\n  if (type === AUTH_LOGIN) {\n    var username = params.username;\n    localStorage.setItem('username', username); // accept all username/password combinations\n\n    return Promise.resolve();\n  }\n\n  if (type === AUTH_LOGOUT) {\n    localStorage.removeItem('username');\n    return Promise.resolve();\n  }\n\n  if (type === AUTH_ERROR) {\n    return Promise.resolve();\n  }\n\n  if (type === AUTH_CHECK) {\n    return localStorage.getItem('username') ? Promise.resolve() : Promise.reject();\n  }\n\n  return Promise.reject('Unkown method');\n});","map":{"version":3,"sources":["/home/lisa/Documents/gitrepos/holochain/holo/holo-hosting/No2_holo-hosting-app_GUI/holo-hosting-app_GUI/src/authProvider.js"],"names":["AUTH_LOGIN","AUTH_LOGOUT","AUTH_CHECK","AUTH_ERROR","type","params","username","localStorage","setItem","Promise","resolve","removeItem","getItem","reject"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,EAAkCC,UAAlC,EAA8CC,UAA9C,QAAgE,aAAhE;AAEA,gBAAe,UAACC,IAAD,EAAOC,MAAP,EAAkB;AAC7B,MAAID,IAAI,KAAKJ,UAAb,EAAyB;AAAA,QACbM,QADa,GACAD,MADA,CACbC,QADa;AAErBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,QAAjC,EAFqB,CAGrB;;AACA,WAAOG,OAAO,CAACC,OAAR,EAAP;AACH;;AACD,MAAIN,IAAI,KAAKH,WAAb,EAA0B;AACtBM,IAAAA,YAAY,CAACI,UAAb,CAAwB,UAAxB;AACA,WAAOF,OAAO,CAACC,OAAR,EAAP;AACH;;AACD,MAAIN,IAAI,KAAKD,UAAb,EAAyB;AACrB,WAAOM,OAAO,CAACC,OAAR,EAAP;AACH;;AACD,MAAIN,IAAI,KAAKF,UAAb,EAAyB;AACrB,WAAOK,YAAY,CAACK,OAAb,CAAqB,UAArB,IACDH,OAAO,CAACC,OAAR,EADC,GAEDD,OAAO,CAACI,MAAR,EAFN;AAGH;;AACD,SAAOJ,OAAO,CAACI,MAAR,CAAe,eAAf,CAAP;AACH,CApBD","sourcesContent":["import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_CHECK, AUTH_ERROR } from 'react-admin';\n\nexport default (type, params) => {\n    if (type === AUTH_LOGIN) {\n        const { username } = params;\n        localStorage.setItem('username', username);\n        // accept all username/password combinations\n        return Promise.resolve();\n    }\n    if (type === AUTH_LOGOUT) {\n        localStorage.removeItem('username');\n        return Promise.resolve();\n    }\n    if (type === AUTH_ERROR) {\n        return Promise.resolve();\n    }\n    if (type === AUTH_CHECK) {\n        return localStorage.getItem('username')\n            ? Promise.resolve()\n            : Promise.reject();\n    }\n    return Promise.reject('Unkown method');\n};\n"]},"metadata":{},"sourceType":"module"}