{"ast":null,"code":"import React from 'react';\nimport pure from 'recompose/pure';\nimport compose from 'recompose/compose';\nimport translateHoc from '../i18n/translate';\nimport getFieldLabelTranslationArgs from './getFieldLabelTranslationArgs';\nexport var FieldTitle = function FieldTitle(_a) {\n  var resource = _a.resource,\n      source = _a.source,\n      label = _a.label,\n      isRequired = _a.isRequired,\n      _b = _a.translate,\n      translate = _b === void 0 ? function (name, options) {\n    return name;\n  } : _b;\n  return React.createElement(\"span\", null, translate.apply(void 0, getFieldLabelTranslationArgs({\n    label: label,\n    resource: resource,\n    source: source\n  })), isRequired && ' *');\n}; // wat? TypeScript looses the displayName if we don't set it explicitly\n\nFieldTitle.displayName = 'FieldTitle';\nvar enhance = compose(translateHoc, pure);\nexport default enhance(FieldTitle);","map":null,"metadata":{},"sourceType":"module"}