{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Switch from '@material-ui/core/Switch';\nimport { addField, FieldTitle } from 'ra-core';\nimport sanitizeRestProps from './sanitizeRestProps';\n\nvar BooleanInput =\n/** @class */\nfunction (_super) {\n  __extends(BooleanInput, _super);\n\n  function BooleanInput() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.handleChange = function (event, value) {\n      _this.props.input.onChange(value);\n    };\n\n    return _this;\n  }\n\n  BooleanInput.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        id = _a.id,\n        input = _a.input,\n        isRequired = _a.isRequired,\n        label = _a.label,\n        source = _a.source,\n        resource = _a.resource,\n        options = _a.options,\n        fullWidth = _a.fullWidth,\n        rest = __rest(_a, [\"className\", \"id\", \"input\", \"isRequired\", \"label\", \"source\", \"resource\", \"options\", \"fullWidth\"]);\n\n    var value = input.value,\n        inputProps = __rest(input, [\"value\"]);\n\n    return React.createElement(FormGroup, __assign({\n      className: className\n    }, sanitizeRestProps(rest)), React.createElement(FormControlLabel, {\n      htmlFor: id,\n      control: React.createElement(Switch, __assign({\n        id: id,\n        color: \"primary\",\n        checked: !!value,\n        onChange: this.handleChange\n      }, inputProps, options)),\n      label: React.createElement(FieldTitle, {\n        label: label,\n        source: source,\n        resource: resource,\n        isRequired: isRequired\n      })\n    }));\n  };\n\n  return BooleanInput;\n}(Component);\n\nexport { BooleanInput };\nBooleanInput.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  input: PropTypes.object,\n  isRequired: PropTypes.bool,\n  label: PropTypes.string,\n  resource: PropTypes.string,\n  source: PropTypes.string,\n  options: PropTypes.object\n};\nBooleanInput.defaultProps = {\n  options: {}\n};\nexport default addField(BooleanInput);","map":null,"metadata":{},"sourceType":"module"}