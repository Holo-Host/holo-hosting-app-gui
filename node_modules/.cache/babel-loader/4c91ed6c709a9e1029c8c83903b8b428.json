{"ast":null,"code":"import inferElementFromValues from './inferElementFromValues';\nimport getValuesFromRecords from './getValuesFromRecords';\n/**\n * Get a list of React-admin field components from a list of records\n *\n * @example\n * const records = [\n *     {\n *         \"id\": 1,\n *         \"title\": \"Lorem Ipsum\",\n *         \"views\": 254,\n *         \"user_id\": 123,\n *     },\n *     {\n *         \"id\": 2,\n *         \"title\": \"Sic Dolor amet\",\n *         \"user_id\": 456,\n *     },\n * ];\n * const types = {\n *     id: NumberField,\n *     string: TextField,\n *     number: NumberField,\n *     reference: ReferenceField\n * };\n * const components = getElementsFromRecords(records, types);\n * // [\n * //    <NumberField source=\"id\" />,\n * //    <TextField source=\"title\" />,\n * //    <NumberField source=\"views\" />,\n * //    <ReferenceField source=\"user_id\" reference=\"users\"><NumberField source=\"id\" /></ReferenceField>,\n * // ];\n */\n\nexport default (function (records, types) {\n  var fieldValues = getValuesFromRecords(records);\n  return Object.keys(fieldValues).reduce(function (fields, fieldName) {\n    return fields.concat(inferElementFromValues(fieldName, fieldValues[fieldName], types));\n  }, []).filter(function (inferredElement) {\n    return inferredElement.isDefined();\n  });\n});","map":null,"metadata":{},"sourceType":"module"}